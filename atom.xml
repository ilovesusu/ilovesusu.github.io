<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Susu的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ilovesusu.com/"/>
  <updated>2019-04-13T07:13:40.702Z</updated>
  <id>http://www.ilovesusu.com/</id>
  
  <author>
    <name>Susu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>du与df查看已使用空间不一致的原因及解决办法</title>
    <link href="http://www.ilovesusu.com/2019/04/13/du%E4%B8%8Edf%E6%9F%A5%E7%9C%8B%E5%B7%B2%E4%BD%BF%E7%94%A8%E7%A9%BA%E9%97%B4%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.ilovesusu.com/2019/04/13/du与df查看已使用空间不一致的原因及解决办法/</id>
    <published>2019-04-13T06:58:42.000Z</published>
    <updated>2019-04-13T07:13:40.702Z</updated>
    
    <content type="html"><![CDATA[<p>linux df -h 显示使用空间已满，用du -sh查看哪个文件夹占用空间比较大时显示只使用了26G,两者相差20GB+<br><a id="more"></a></p><h2 id="问题展示"><a href="#问题展示" class="headerlink" title="问题展示"></a>问题展示</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ls-dj-test-4 /]<span class="comment"># df -h</span></span><br><span class="line"></span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line"></span><br><span class="line">/dev/sda1 100G 100G 20K 100% /</span><br><span class="line"></span><br><span class="line">[root@ls-dj-test-4 /]<span class="comment"># du -sh /</span></span><br><span class="line"></span><br><span class="line">26G /</span><br></pre></td></tr></table></figure><p>从这里面可以看出通过du看到使用了26G，但是通过df 看，/data目录已使用100G</p><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>这种问题主要是因为已经被<strong>删掉</strong>的文件还有程序（进程）在占用，所以文件没被真正释放</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><p>1、lsof |grep deleted &gt; deleted_file查看有哪些未被释放的文件<br>2、排序看最大的未被释放的文件大小，命令：sort -nr -k 7 deleted_file&gt;sort_deleted_file<br>3、more sort_deleted_file 查看前面那些文件，将占用空间大的程序kill掉<br>kill 进程号</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p>有时候进程号太多，都是占用一个文件，那就需要新的解决方案了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">sh     7654  7723 sh             root   46w      REG               0,22     65536     276676 /var/<span class="built_in">log</span>/54sdfa48df1sdag654dfg15.log (deleted)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这个时候找到对应进程号后，直接cd /proc/pid/fd（fd中记录的是这个进程打开的所有文件的信息），pid是进程号(自己前面的修改命令)。<br>这时候需要通过方法一lsof查找到被删除文件的信息，命令回显其中有一项是FD，这个值有最后一位去除（最后一位可能是w/r/u等表示文件状态），例如上述FD值为46w，则在fd路径下对应的文件是46，直接执行echo “” &gt; 46,看下面命令，自己领悟。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/proc/7654/fd</span><br><span class="line">$ ls</span><br><span class="line">0    104  110  117  123  13   141  19  25  31  38  44  50  57  63  70  78  84  90  97</span><br><span class="line">1    105  111  118  124  130  147  2   26  32  39  45  51  58  64  71  79  85  91  98</span><br><span class="line">10   106  112  119  125  131  15   20  27  33  4   46  52  59  65  72  8   86  92  99</span><br><span class="line">100  107  113  12   126  132  16   21  28  34  40  47  53  6   66  74  80  87  93</span><br><span class="line">101  108  114  120  127  135  17   22  29  35  41  48  54  60  67  75  81  88  94</span><br><span class="line">102  109  115  121  128  138  171  23  3   36  42  49  55  61  68  76  82  89  95</span><br><span class="line">103  11   116  122  129  14   18   24  30  37  43  5   56  62  7   77  83  9   96</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">""</span> &gt; 46</span><br></pre></td></tr></table></figure><p>执行完毕后，再次通过df  du命令查看时，问题应该解决了。</p><h2 id="最后，其实这个问题重启就能解决。"><a href="#最后，其实这个问题重启就能解决。" class="headerlink" title="最后，其实这个问题重启就能解决。"></a>最后，其实这个问题重启就能解决。</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux df -h 显示使用空间已满，用du -sh查看哪个文件夹占用空间比较大时显示只使用了26G,两者相差20GB+&lt;br&gt;
    
    </summary>
    
      <category term="xx" scheme="http://www.ilovesusu.com/categories/xx/"/>
    
    
      <category term="xx" scheme="http://www.ilovesusu.com/tags/xx/"/>
    
  </entry>
  
  <entry>
    <title>Linux内核优化？！看我就完了</title>
    <link href="http://www.ilovesusu.com/2019/02/18/Linux%E5%86%85%E6%A0%B8%E4%BC%98%E5%8C%96%EF%BC%9F%EF%BC%81%E5%B9%B2%E5%B0%B1%E5%AE%8C%E4%BA%86/"/>
    <id>http://www.ilovesusu.com/2019/02/18/Linux内核优化？！干就完了/</id>
    <published>2019-02-18T03:31:52.000Z</published>
    <updated>2019-03-08T08:01:09.566Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Linux-内核开启-BBR"><a href="#Linux-内核开启-BBR" class="headerlink" title="Linux 内核开启 BBR"></a>Linux 内核开启 BBR</h2><p>由于 Debian 9默认的就是4.9的内核而且编译了 TCP BBR，所以可以直接通过参数开启，实现高效单边加速。</p><h3 id="1、修改系统变量"><a href="#1、修改系统变量" class="headerlink" title="1、修改系统变量"></a>1、修改系统变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"net.core.default_qdisc=fq"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"net.ipv4.tcp_congestion_control=bbr"</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><h3 id="2、保存生效"><a href="#2、保存生效" class="headerlink" title="2、保存生效"></a>2、保存生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="3、查看内核是否已开启BBR"><a href="#3、查看内核是否已开启BBR" class="headerlink" title="3、查看内核是否已开启BBR"></a>3、查看内核是否已开启BBR</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure><p>显示以下即已开启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br></pre></td></tr></table></figure><h3 id="4、查看BBR是否启动"><a href="#4、查看BBR是否启动" class="headerlink" title="4、查看BBR是否启动"></a>4、查看BBR是否启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Linux-内核开启-BBR&quot;&gt;&lt;a href=&quot;#Linux-内核开启-BBR&quot; class=&quot;headerlink&quot; title=&quot;Linux 内核开启 BBR&quot;&gt;&lt;/a&gt;Linux 内核开启 BBR&lt;/h2&gt;&lt;p&gt;由于 D
      
    
    </summary>
    
      <category term="xx" scheme="http://www.ilovesusu.com/categories/xx/"/>
    
    
      <category term="xx" scheme="http://www.ilovesusu.com/tags/xx/"/>
    
  </entry>
  
  <entry>
    <title>数据库完全备份还原及还原某一张表</title>
    <link href="http://www.ilovesusu.com/2019/01/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E5%85%A8%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F%E5%8F%8A%E8%BF%98%E5%8E%9F%E6%9F%90%E4%B8%80%E5%BC%A0%E8%A1%A8/"/>
    <id>http://www.ilovesusu.com/2019/01/16/数据库完全备份还原及还原某一张表/</id>
    <published>2019-01-16T07:49:04.000Z</published>
    <updated>2019-02-25T02:53:02.339Z</updated>
    
    <content type="html"><![CDATA[<p>数据库备份和还原是非常重要的，这里将备份还原的常用命令进行总结。</p><a id="more"></a><h2 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h2><p>1.备份某个数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p[密码] [选项] [数据库名] [表名] &gt; /备份路径/备份文件名</span><br><span class="line"><span class="comment"># 备份库到目录下，-p之后可跟密码，也可不写。不写就在回车之后输入密码验证。 备份文件后缀都为.sql</span></span><br></pre></td></tr></table></figure><p>2.创建一个数据库school，对school库的info1、info2表备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p123123 school info1 info2 &gt; /root/info.sql</span><br></pre></td></tr></table></figure><p>3.备份多个数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --databases mysql study &gt; /root/mysql_study.sql</span><br><span class="line"><span class="comment"># --databases 数据库名 数据库名...</span></span><br></pre></td></tr></table></figure><p>4.备份所有数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --opt --all-databases &gt; /root/all.sql</span><br><span class="line"><span class="comment"># --opt 表示激活了Mysqldump命令的quick，add-drop-table，add-locks，extended-insert，lock-tables参数，也就是通过--opt参数在使用Mysqldump导出Mysql数据库信息时不需要再附加上述这些参数。</span></span><br><span class="line"><span class="comment"># --all-databases 表示所有数据库；</span></span><br></pre></td></tr></table></figure><p>5.备份数据库中的表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p study info &gt; /root/study_info.sql</span><br><span class="line"><span class="comment"># 备份info表</span></span><br></pre></td></tr></table></figure><p>6.备份数据库的表结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p -d study info &gt; /root/study_info_table_structure.sql</span><br><span class="line"><span class="comment"># -d  库名+表名  表示表结构</span></span><br></pre></td></tr></table></figure><h2 id="数据库还原"><a href="#数据库还原" class="headerlink" title="数据库还原"></a>数据库还原</h2><p>登录后使用source还原</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /root/school.sql</span><br></pre></td></tr></table></figure><p>直接使用mysql命令还原</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p123123 school &lt; /root/school.sql</span><br></pre></td></tr></table></figure><h2 id="还原某张表"><a href="#还原某张表" class="headerlink" title="还原某张表"></a>还原某张表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用sed命令将user表的表结构抽取出导出到新的sql文件中</span></span><br><span class="line">sed -e<span class="string">'/./&#123;H;$!d;&#125;'</span> -e <span class="string">'x;/CREATE TABLE `users`/!d;q'</span> xxxbackup.sql &gt; 1.sql</span><br><span class="line"><span class="comment"># 使用grep 将所有包含 INSERT INTO `users` 的行追加到新sql文件中</span></span><br><span class="line">grep <span class="string">'INSERT INTO `users`'</span> xxxbackup.sql &gt;&gt; 1.sql</span><br></pre></td></tr></table></figure><h2 id="通过binlog文件导出指定时间段sql操作"><a href="#通过binlog文件导出指定时间段sql操作" class="headerlink" title="通过binlog文件导出指定时间段sql操作"></a>通过binlog文件导出指定时间段sql操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 首先将binlog文件导出指定时间段的内容：</span><br><span class="line"></span><br><span class="line">  ```bash</span><br><span class="line">  mysqlbinlog --start-datetime=<span class="string">'2017-09-10 00:00:00'</span> --stop-datetime=<span class="string">'2017-09-10 01:01:01'</span> -d 库名 二进制文件</span><br></pre></td></tr></table></figure><p>2 将指定的表操作内容过滤到指定文件</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -B3 -w tb_name data.sql |grep -v  <span class="string">'^--$'</span> &gt; tb_name.sql</span><br></pre></td></tr></table></figure><p>3 导出update操作的sql</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat tb_name.sql| grep <span class="string">"UPDATE"</span> &gt; update_XX.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据库备份和还原是非常重要的，这里将备份还原的常用命令进行总结。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian" scheme="http://www.ilovesusu.com/categories/Debian/"/>
    
    
      <category term="数据库" scheme="http://www.ilovesusu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>联想Y7000等硬件开关导致wifi不可用的解决方案</title>
    <link href="http://www.ilovesusu.com/2018/12/12/%E8%81%94%E6%83%B3Y7000%E7%AD%89%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%85%B3%E5%AF%BC%E8%87%B4wifi%E4%B8%8D%E5%8F%AF%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.ilovesusu.com/2018/12/12/联想Y7000等硬件开关导致wifi不可用的解决方案/</id>
    <published>2018-12-12T09:31:54.000Z</published>
    <updated>2018-12-15T07:09:23.885Z</updated>
    
    <content type="html"><![CDATA[<p>花了8000+大洋买了联想笔记本电脑安装Debian系统,但是发现无法使用wifi(已经安装Firmware)。经过研究发现需要开启无线硬件开关.</p><a id="more"></a><p>首先安装RFKill,RFKill 是Linux内核中的一个子系统，它可提供一个接口，在此接口中可查询、激活并取消激活计算机系统中的无线电传输。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install rfkill</span><br></pre></td></tr></table></figure><p>然后查看所有设备的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ rfkill list all</span><br><span class="line"></span><br><span class="line">0:ideapad_wlan: Wireless LAN</span><br><span class="line">  Soft blocked: no</span><br><span class="line">  Hard blocked:yes</span><br><span class="line"></span><br><span class="line">1:ideapad_bluetooth: Bluetooth</span><br><span class="line">  Soft blocked: no</span><br><span class="line">  Hard blocked: yes</span><br><span class="line"></span><br><span class="line">2:phy0: Wireless LAN</span><br><span class="line">  Soft blocked: no</span><br><span class="line">  Hard blocked:no</span><br><span class="line"></span><br><span class="line">3:hci0: Bluetooth</span><br><span class="line">  Soft blocked: yes</span><br><span class="line">  Hard blocked: no</span><br></pre></td></tr></table></figure><p>根据返回内容可以看到，优先级前的ideapad_wlan Hard blocked 默认为yes，即内核默认关闭了wifi硬件，而现在联想笔记本只有软件wifi开关，没有硬件开关，所以引起了wifi无法开启的尴尬问题。</p><p>其实解决问题的办法很简单利用黑名单将wifi硬件锁内核模块加入黑名单,阻止其自动启动</p><p>首先进入/etc/modprobe.d/文件夹下创建.conf文件，把ideapad_wlan模块加入黑名单。 </p><blockquote><p>这模块每种型号品牌可能不一样,但是原理是一样的哦</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sudo nano /etc/modprobe.d/ideapad.conf</span></span><br></pre></td></tr></table></figure><p>打开文件后 输入如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blacklist ideapad_laptop</span><br></pre></td></tr></table></figure><p>保存并关闭,在重启系统之后，右上角的wifi就可以使用了。</p><p>如果不想重启可以使用以下命令快速移除某模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe -r ideapad_laptop</span><br></pre></td></tr></table></figure><p>ps：modprobe命令用于智能地向内核中加载模块或者从内核中移除模块。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了8000+大洋买了联想笔记本电脑安装Debian系统,但是发现无法使用wifi(已经安装Firmware)。经过研究发现需要开启无线硬件开关.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.ilovesusu.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://www.ilovesusu.com/tags/Android/"/>
    
      <category term="SQLite" scheme="http://www.ilovesusu.com/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title>从零开始,学习web前端之前端发展史</title>
    <link href="http://www.ilovesusu.com/2018/12/10/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-%E5%AD%A6%E4%B9%A0web%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%89%8D%E7%AB%AF%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
    <id>http://www.ilovesusu.com/2018/12/10/从零开始-学习web前端之前端发展史/</id>
    <published>2018-12-10T12:19:30.000Z</published>
    <updated>2018-12-10T12:19:30.730Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>详细解释 Payload Shellcode Exploit Poc</title>
    <link href="http://www.ilovesusu.com/2018/12/10/%E8%AF%A6%E7%BB%86%E8%A7%A3%E9%87%8A-Payload-Shellcode-Exploit-Poc/"/>
    <id>http://www.ilovesusu.com/2018/12/10/详细解释-Payload-Shellcode-Exploit-Poc/</id>
    <published>2018-12-10T12:17:05.000Z</published>
    <updated>2018-12-23T09:50:12.285Z</updated>
    
    <content type="html"><![CDATA[<p>在信息安全领域，shellcode通常是作为攻击载荷出现。 “shellcode”之所以得名，是因为这段代码通常会返回一个shell，以供攻击者控制被攻击的主机。类似功能的攻击代码都可以称之为shellcode。 因为攻击载荷的功能不仅限于生成一个shell，有人曾说shellcode这个名称并不准确。 Shellcode大多以机器语言写成。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在信息安全领域，shellcode通常是作为攻击载荷出现。 “shellcode”之所以得名，是因为这段代码通常会返回一个shell，以供攻击者控制被攻击的主机。类似功能的攻击代码都可以称之为shellcode。 因为攻击载荷的功能不仅限于生成一个shell，有人曾说she
      
    
    </summary>
    
      <category term="网络安全" scheme="http://www.ilovesusu.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Payload" scheme="http://www.ilovesusu.com/tags/Payload/"/>
    
      <category term="Shellcode" scheme="http://www.ilovesusu.com/tags/Shellcode/"/>
    
      <category term="Exploit" scheme="http://www.ilovesusu.com/tags/Exploit/"/>
    
  </entry>
  
  <entry>
    <title>服务器扩容数据盘</title>
    <link href="http://www.ilovesusu.com/2018/11/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A9%E5%AE%B9%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
    <id>http://www.ilovesusu.com/2018/11/24/服务器扩容数据盘/</id>
    <published>2018-11-24T12:17:16.000Z</published>
    <updated>2018-12-15T07:10:00.625Z</updated>
    
    <content type="html"><![CDATA[<p>随着业务的增长，您的数据盘容量可能无法满足数据存储的需要，这时您可以使用磁盘扩容功能扩容数据盘。</p><a id="more"></a><h2 id="1-查看系统中有多少可以识别的硬盘、U盘"><a href="#1-查看系统中有多少可以识别的硬盘、U盘" class="headerlink" title="1.查看系统中有多少可以识别的硬盘、U盘"></a>1.查看系统中有多少可以识别的硬盘、U盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/vda：42.9 GB, 42949672960 字节，83886080 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0008d73a</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048    83884031    41940992   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/vdb：42.9 GB, 42949672960 字节，83886080 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0c70d2d8</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048    83886079    41942016   83  Linux</span><br></pre></td></tr></table></figure><h2 id="2-确保系统没有挂载你要操作的硬盘"><a href="#2-确保系统没有挂载你要操作的硬盘" class="headerlink" title="2.确保系统没有挂载你要操作的硬盘"></a>2.确保系统没有挂载你要操作的硬盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/vda：42.9 GB, 42949672960 字节，83886080 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0008d73a</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *        2048    83884031    41940992   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/vdb：42.9 GB, 42949672960 字节，83886080 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0c70d2d8</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048    83886079    41942016   83  Linux</span><br><span class="line">[root@izx71k71i0q19uz ~]<span class="comment"># df -h</span></span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line"><span class="comment">## 此处可以看到vda1处于挂载状态</span></span><br><span class="line">/dev/vda1        40G   22G   16G   59% /</span><br><span class="line">devtmpfs        7.8G     0  7.8G    0% /dev</span><br><span class="line">tmpfs           7.8G  548K  7.8G    1% /dev/shm</span><br><span class="line">tmpfs           7.8G  676K  7.8G    1% /run</span><br><span class="line">tmpfs           7.8G     0  7.8G    0% /sys/fs/cgroup</span><br><span class="line">tmpfs           1.6G     0  1.6G    0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="3-使用fdisk命令对新硬盘进行分区"><a href="#3-使用fdisk命令对新硬盘进行分区" class="headerlink" title="3.使用fdisk命令对新硬盘进行分区"></a>3.使用fdisk命令对新硬盘进行分区</h2><ol><li>运行命令 fdisk [数据盘设备名] 进入 fdisk 界面。本示例中，命令为 fdisk /dev/vdb1。</li><li>输入m查看帮助</li><li>输入 d 并按回车键，删除原来的分区，选择分区编号即可删除分区。</li><li>输入 n 并按回车键，开始创建新的分区。</li><li>输入 p 并按回车键，选择创建主分区。因为创建的是一个单分区数据盘，所以只需要创建主分区。</li><li>输入分区编号并按回车键。因为这里仅创建一个分区，所以输入 1。</li><li>输入第一个可用的扇区编号：按回车键采用默认值。</li><li>输入最后一个扇区编号：因为这里仅创建一个分区，所以按回车键采用默认值。</li><li>输入查看分区类型的id，然后输入选择好的id回车即可。</li><li>输入 p 并按回车键，查看当前分区表。</li><li>输入 t 并按回车键，用来指定分区类型。</li><li>输入 wq 并按回车键，开始分区，请确定无误后操作。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk /dev/vdb1</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): d</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 is deleted</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">p primary (0 primary, 0 extended, 4 free)</span><br><span class="line">e extended</span><br><span class="line">Select (default p):</span><br><span class="line">Using default response p</span><br><span class="line">Partition number (1-4, default 1):</span><br><span class="line">First sector (2048-83886080, default 2048):</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-83886080, default 83886080):</span><br><span class="line">Using default value 83886080</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 40 GiB is <span class="built_in">set</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): wq</span><br><span class="line">The partition table has been altered!</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h2 id="4-通知操作系统，分区表已经改变"><a href="#4-通知操作系统，分区表已经改变" class="headerlink" title="4.通知操作系统，分区表已经改变"></a>4.通知操作系统，分区表已经改变</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># partprobe</span></span><br></pre></td></tr></table></figure><h2 id="5-格式化"><a href="#5-格式化" class="headerlink" title="5.格式化"></a>5.格式化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs -t ext4 /dev/vdb1</span></span><br></pre></td></tr></table></figure><p>注：-t ext4表示写入的是ext4文件系统。并且只能给主分区sdb1和扩展分区sdb5写入文件系统（不能给扩展分区sdb2写入文件系统）</p><h2 id="6-建立挂载点并挂载"><a href="#6-建立挂载点并挂载" class="headerlink" title="6. 建立挂载点并挂载"></a>6. 建立挂载点并挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkdir wtf</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mount /dev/vdb1 /root/wtf</span></span><br></pre></td></tr></table></figure><h2 id="7-查看挂载情况："><a href="#7-查看挂载情况：" class="headerlink" title="7.查看挂载情况："></a>7.查看挂载情况：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -h</span></span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/vda1        40G   22G   16G   59% /</span><br><span class="line">devtmpfs        7.8G     0  7.8G    0% /dev</span><br><span class="line">tmpfs           7.8G  548K  7.8G    1% /dev/shm</span><br><span class="line">tmpfs           7.8G  676K  7.8G    1% /run</span><br><span class="line">tmpfs           7.8G     0  7.8G    0% /sys/fs/cgroup</span><br><span class="line">tmpfs           1.6G     0  1.6G    0% /run/user/0</span><br><span class="line">/dev/vdb1        40G   11G   27G   30% /root/wtf</span><br><span class="line"><span class="comment">##可以看到已经挂载了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着业务的增长，您的数据盘容量可能无法满足数据存储的需要，这时您可以使用磁盘扩容功能扩容数据盘。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="服务器扩容" scheme="http://www.ilovesusu.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A9%E5%AE%B9/"/>
    
      <category term="数据盘" scheme="http://www.ilovesusu.com/tags/%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>Debian 配置 Mysql 数据库主从，读写分离，负载均衡</title>
    <link href="http://www.ilovesusu.com/2018/11/21/Debian-%E9%85%8D%E7%BD%AE-Mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%BB%8E%EF%BC%8C%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%EF%BC%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://www.ilovesusu.com/2018/11/21/Debian-配置-Mysql-数据库主从，读写分离，负载均衡/</id>
    <published>2018-11-21T12:17:30.000Z</published>
    <updated>2018-12-15T07:09:54.017Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL数据库主从复制技术主要有以下一些特点：</p><ol><li>数据分布 (Data distribution )</li><li>负载均衡(load balancing)</li><li>备份(Backups)</li><li>高可用性和容错性 (High availability and failover)</li><li>…</li></ol><a id="more"></a><p>利用这些特点完成能实现多种多样的用途</p><ol><li>实时灾备，作为后备数据库，主数据库服务器故障后，可切换到从数据库继续工作，避免数据丢失。</li><li>读写分离，提供优质的查询服务。业务量越来越大，I/O访问频率过高，单机无法满足，此时做多库的存储，降低磁盘I/O访问的频率，提高单个机器的I/O性能。</li><li>备份，避免影响业务</li><li>…</li></ol><p>主从形式也是多种多样：</p><ol><li>一主一从</li><li>互为主从(主主复制)</li><li>一主多从</li><li>多主一从</li><li>…</li></ol><h2 id="MySQL主从复制的原理"><a href="#MySQL主从复制的原理" class="headerlink" title="MySQL主从复制的原理"></a>MySQL主从复制的原理</h2><p><img src="./主从详情.gif" alt="主从原理"></p><ol><li>master在执行某sql之后，记录二进制log文件(bin-log)。</li><li>在slave端的IO线程连接上master端后，会请求从指定binlog日志文件的指定pos节点位置(或者从最开始的日志)开始复制之后的日志内容。</li><li>master端在接收到来自slave端的IO线程请求后，通知负责复制进程的IO线程，根据slave端IO线程的请求信息，读取指定 binlog日志指定pos节点位置之后的日志信息，然后返回给slave端的IO线程。该返回信息中除了binlog日志所包含的信息之外，还包括本次返回的信息在master端的binlog文件名以及在该binlog日志中的pos节点位置。</li><li>slave端的IO线程在接收到master端IO返回的信息后，将接收到的binlog日志内容依次写入到slave端的relay log文件(mysql-relay-bin.xxxxxx)的最末端，并将读取到的master端的binlog文件名和pos节点位置记录到master- info（该文件存在slave端）文件中，以便在下一次读取的时候能够清楚的告诉master，我需要从哪个binlog文件的哪个pos节点位置开 始，请把此节点以后的日志内容发给我。</li><li>slave端的SQL线程在检测到relaylog文件中新增内容后，会马上解析该log文件中的内容。然后还原成在master端真实执行的真实SQL语句，并在自身按顺序依次执行这些SQL语句。</li></ol><h2 id="MySQL主从复制的缺点"><a href="#MySQL主从复制的缺点" class="headerlink" title="MySQL主从复制的缺点"></a>MySQL主从复制的缺点</h2><p>吹了那么多东西，也说说缺点吧！</p><ol><li>主从间的数据库不是实时同步，就算网络连接正常，也存在瞬间主从数据不一致的情况。</li><li>如果主从的网络断开，则从库会在网络恢复正常后，批量进行同步。</li><li>如果对从库进行修改数据，那么如果此时从库正在在执行主库的bin-log时，则会出现错误而停止同步，这个是很危险的操作。所以一般情况下，我们不在从库上修改数据。</li></ol><p>注意：</p><ol><li>一个衍生的配置是双主、互为主从配置，只要双方的修改不冲突，则可以工作良好。</li><li>如果需要多主库的话，可以用环形配置，这样任意一个节点的修改都可以同步到所有节点。</li></ol><h2 id="项目场景"><a href="#项目场景" class="headerlink" title="项目场景"></a>项目场景</h2><ol><li>主服务器10.10.20.111，其中已经有数据库且库中较多，读写操作频繁。</li><li>从服务器10.10.20.116，空的啥也没有</li></ol><p>由于数据库中数据较多且数据库设计不合理，导致很多SQL慢查询，虽然进行了 SQL慢查询优化 ，但是由于读写频繁，服务器压力大，所以提案了两种方案优化。</p><ol><li>互为主从并用nginx实现负载</li><li>读写分离，使用mysql中间件提供负载均衡及连接池</li></ol><p>最后选择了配置互为主从并用nginx实现负载均衡。当然我在文章最后也会提供Mysql中间件实现读写分离的方法</p><h2 id="mysql主从搭建"><a href="#mysql主从搭建" class="headerlink" title="mysql主从搭建"></a>mysql主从搭建</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>因为主从服务器需要有相同的初态，所以首先要将主库的数据备份并恢复到从库。</p><h3 id="1、将主服务器要同步的数据库加锁，避免同步时数据发生改变"><a href="#1、将主服务器要同步的数据库加锁，避免同步时数据发生改变" class="headerlink" title="1、将主服务器要同步的数据库加锁，避免同步时数据发生改变"></a>1、将主服务器要同步的数据库加锁，避免同步时数据发生改变</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;use db;</span><br><span class="line">mysql&gt;flush tables with read lock;</span><br></pre></td></tr></table></figure><h3 id="2、将主服务器数据库中数据导出"><a href="#2、将主服务器数据库中数据导出" class="headerlink" title="2、将主服务器数据库中数据导出"></a>2、将主服务器数据库中数据导出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;mysqldump -uroot -pxxxx db &gt; db.sql;</span><br></pre></td></tr></table></figure><p>这个命令是导出数据库中所有表结构和数据</p><h3 id="3、将初始数据导入从服务器数据库"><a href="#3、将初始数据导入从服务器数据库" class="headerlink" title="3、将初始数据导入从服务器数据库"></a>3、将初始数据导入从服务器数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;mysqldump -uroot -pxxxx db &lt; db.sql;</span><br></pre></td></tr></table></figure><h2 id="主服务器配置"><a href="#主服务器配置" class="headerlink" title="主服务器配置"></a>主服务器配置</h2><h3 id="1、修改主MySQL配置"><a href="#1、修改主MySQL配置" class="headerlink" title="1、修改主MySQL配置"></a>1、修改主MySQL配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br><span class="line">在[mysqld]中找到server-id，完成以内容的修改</span><br><span class="line"></span><br><span class="line">#主数据库端ID号，通常设置为ip的最后一个10进制位，这里我设置为1</span><br><span class="line">server_id = 1</span><br><span class="line"> #开启二进制日志，这里是二进制日志的前缀名称及其存放地点</span><br><span class="line">log-bin = /var/log/mysql/mysql-bin</span><br><span class="line">#需要复制的数据库名，如果复制多个数据库，重复设置这个选项即可</span><br><span class="line">binlog-do-db = db</span><br><span class="line">##binlog-do-db = db1</span><br><span class="line">#二进制日志自动删除的天数，默认值为0,表示“没有自动删除”，启动时和二进制日志循环时可能删除</span><br><span class="line">expire_logs_days = 7</span><br></pre></td></tr></table></figure><h3 id="2、重启MySQL，创建允许从服务器同步数据的账户"><a href="#2、重启MySQL，创建允许从服务器同步数据的账户" class="headerlink" title="2、重启MySQL，创建允许从服务器同步数据的账户"></a>2、重启MySQL，创建允许从服务器同步数据的账户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建slave账号account，密码123456</span><br><span class="line">mysql&gt;grant replication slave on *.* to &apos;account&apos;@&apos;10.10.20.116&apos; identified by &apos;123456&apos;;</span><br><span class="line">#更新数据库权限</span><br><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure><h3 id="3、查看主服务器状态"><a href="#3、查看主服务器状态" class="headerlink" title="3、查看主服务器状态"></a>3、查看主服务器状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show master status/G;</span><br><span class="line">***************** 1. row ****************</span><br><span class="line">            File: mysql-bin.000033 #当前记录的日志</span><br><span class="line">        Position: 337523 #日志中记录的位置</span><br><span class="line">    Binlog_Do_DB:</span><br><span class="line">Binlog_Ignore_DB:</span><br></pre></td></tr></table></figure><h2 id="从服务器配置"><a href="#从服务器配置" class="headerlink" title="从服务器配置"></a>从服务器配置</h2><h3 id="1、修改从MySQL配置"><a href="#1、修改从MySQL配置" class="headerlink" title="1、修改从MySQL配置"></a>1、修改从MySQL配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br><span class="line">在[mysqld]中添加</span><br><span class="line"></span><br><span class="line">server_id = 2</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">log-slave-updates</span><br><span class="line">sync_binlog = 0</span><br><span class="line">#指定slave要复制哪个库</span><br><span class="line">replicate-do-db = db</span><br><span class="line">#MySQL主从复制的时候，当Master和Slave之间的网络中断，但是Master和Slave无法察觉的情况下（比如防火墙或者路由问题）。Slave会等待slave_net_timeout设置的秒数后，才能认为网络出现故障，然后才会重连并且追赶这段时间主库的数据</span><br><span class="line">slave-net-timeout = 60</span><br></pre></td></tr></table></figure><h3 id="2、执行同步命令"><a href="#2、执行同步命令" class="headerlink" title="2、执行同步命令"></a>2、执行同步命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#执行同步命令，设置主服务器ip，同步账号密码，同步位置</span><br><span class="line">mysql&gt;change master to master_host=&apos;10.10.20.111&apos;,master_user=&apos;account&apos;,master_password=&apos;123456&apos;,master_log_file=&apos;mysql-bin.000033&apos;,master_log_pos=337523;</span><br><span class="line">#开启同步功能</span><br><span class="line">mysql&gt;start slave;</span><br></pre></td></tr></table></figure><h3 id="3、查看从服务器状态"><a href="#3、查看从服务器状态" class="headerlink" title="3、查看从服务器状态"></a>3、查看从服务器状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Slave_IO_State: Waiting for master to send event</span><br><span class="line">        Master_Host: 10.10.20.111</span><br><span class="line">        Master_User: account</span><br><span class="line">        Master_Port: 3306</span><br><span class="line">        Connect_Retry: 60</span><br><span class="line">        Master_Log_File: mysql-bin.000033</span><br><span class="line">        Read_Master_Log_Pos: 337523</span><br><span class="line">        Relay_Log_File: db2-relay-bin.000002</span><br><span class="line">        Relay_Log_Pos: 337686</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000033</span><br><span class="line">        Slave_IO_Running: Yes ##这两行很重要都是YES表示成功</span><br><span class="line">        Slave_SQL_Running: Yes</span><br><span class="line">        Replicate_Do_DB:</span><br><span class="line">        Replicate_Ignore_DB:</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h2 id="测试主从是否配置成功"><a href="#测试主从是否配置成功" class="headerlink" title="测试主从是否配置成功"></a>测试主从是否配置成功</h2><h3 id="1、解锁主服务器数据库"><a href="#1、解锁主服务器数据库" class="headerlink" title="1、解锁主服务器数据库"></a>1、解锁主服务器数据库</h3><p>首先解锁主库。</p><p>mysql&gt;unlock tables;</p><p>然后在主库上创建一张空表，然后在从数据库上查看是否成功同步。</p><h2 id="mysql互为主从搭建"><a href="#mysql互为主从搭建" class="headerlink" title="mysql互为主从搭建"></a>mysql互为主从搭建</h2><h3 id="0-创建授权用户"><a href="#0-创建授权用户" class="headerlink" title="0.创建授权用户"></a>0.创建授权用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#A服务器</span><br><span class="line">mysql&gt; grant replication slave on *.* to &apos;account&apos;@&apos;10.10.20.116&apos; identified by &apos;123456&apos;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">#B服务器</span><br><span class="line">mysql&gt; grant replication slave on *.* to &apos;account&apos;@&apos;10.10.20.111&apos; identified by &apos;123456&apos;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="1-编辑主库配置文件"><a href="#1-编辑主库配置文件" class="headerlink" title="1.编辑主库配置文件"></a>1.编辑主库配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#主库配置文件</span><br><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br><span class="line">log-bin=mysql-bin                 #开启二进制日志</span><br><span class="line">server-id=1</span><br><span class="line">relay-log=mysql-relay-bin         #开启中继日志</span><br><span class="line">#将从服务器从主服务器收到的更新记入到从服务器自己的二进制日志文件中,</span><br><span class="line">#从库做为其他从库的主库时 log-slave-updates参数是必须要添加</span><br><span class="line">log_slave_updates = on</span><br><span class="line">#这个参数一般用在主主同步中，用来错开自增值, 防止键值在相互同步时冲突，导致数据丢失</span><br><span class="line">auto_increment_increment=2        #自动增长的步长</span><br><span class="line">auto_increment_offset=1           #自动增长的起始数值</span><br><span class="line">#控制binlog的写入频率。每执行多少次事务写入一次(这个参数性能消耗很大，但可减小MySQL崩溃造成的损失)</span><br><span class="line">sync_binlog = 1</span><br><span class="line">修改配置完成以后重启</span><br></pre></td></tr></table></figure><h3 id="2-编辑从库配置文件"><a href="#2-编辑从库配置文件" class="headerlink" title="2.编辑从库配置文件"></a>2.编辑从库配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#从库配置文件，先关闭二进制日志</span><br><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br><span class="line">server-id=2</span><br><span class="line">#log-bin=mysql-bin</span><br><span class="line">#log_slave_updates = on</span><br><span class="line">auto_increment_increment=2</span><br><span class="line">auto_increment_offset=2</span><br><span class="line">修改配置完成以后重启</span><br></pre></td></tr></table></figure><h3 id="3-将表导入到从服务器上"><a href="#3-将表导入到从服务器上" class="headerlink" title="3.将表导入到从服务器上"></a>3.将表导入到从服务器上</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldump --databases db --lock-all-tables --master-data=2 &gt; /root/db.sql</span><br><span class="line">scp /root/db.sql root@10.10.20.116:/root/</span><br><span class="line">mysql -uroot -p db &lt; dump.sql     <span class="comment">#从服务器上执行</span></span><br></pre></td></tr></table></figure><p>为了防止数据库内容变化，在主数据库导出数据前和从数据库导入数据后，应该对数据库进行加锁。</p><h3 id="4-让从库先成为slave"><a href="#4-让从库先成为slave" class="headerlink" title="4.让从库先成为slave"></a>4.让从库先成为slave</h3><p>首先查看主库的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show master status/G;</span><br><span class="line">***************** 1. row ****************</span><br><span class="line">            File: mysql-bin.000033 <span class="comment">#当前记录的日志</span></span><br><span class="line">        Position: 337523 <span class="comment">#日志中记录的位置</span></span><br><span class="line">    Binlog_Do_DB:</span><br><span class="line">Binlog_Ignore_DB:</span><br></pre></td></tr></table></figure><p>然后让从库先成为slave</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">'10.10.20.111'</span>,master_user=<span class="string">'account'</span>,master_password=<span class="string">'123456'</span>,master_port=3306,MASTER_LOG_FILE=<span class="string">'mysql-bin.000033'</span>, MASTER_LOG_POS=337523;</span><br></pre></td></tr></table></figure><h3 id="5-让主库成为slave"><a href="#5-让主库成为slave" class="headerlink" title="5.让主库成为slave"></a>5.让主库成为slave</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#修改从库的配置</span><br><span class="line">nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br><span class="line">#将刚刚注释掉的参数生效</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">log_slave_updates = on</span><br></pre></td></tr></table></figure><p>修改配置完成以后重启从库，然后查看从库的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status/G;</span><br><span class="line">***************** 1. row ****************</span><br><span class="line">            File: mysql-bin.000001 #当前记录的日志</span><br><span class="line">        Position: 120 #日志中记录的位置</span><br><span class="line">    Binlog_Do_DB:</span><br><span class="line">Binlog_Ignore_DB:</span><br></pre></td></tr></table></figure><p>然后让主库成为slave</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">'10.10.20.116'</span>,master_user=<span class="string">'account'</span>,master_password=<span class="string">'123456'</span>,master_port=3306,MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>, MASTER_LOG_POS=120;</span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><h3 id="6-查看主从数据库的状态"><a href="#6-查看主从数据库的状态" class="headerlink" title="6.查看主从数据库的状态"></a>6.查看主从数据库的状态</h3><p>主库的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">Master_Host: 10.10.20.116</span><br><span class="line">Master_User: account</span><br><span class="line">Master_Port: 3306</span><br><span class="line">...</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>从库的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">Master_Host:10.10.20.111</span><br><span class="line">Master_User: account</span><br><span class="line">Master_Port: 3306</span><br><span class="line">Connect_Retry: 60</span><br><span class="line">...</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="7-测试互为主从是否成功"><a href="#7-测试互为主从是否成功" class="headerlink" title="7.测试互为主从是否成功"></a>7.测试互为主从是否成功</h3><p>首先解锁主库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;unlock tables;</span><br></pre></td></tr></table></figure><p>然后在主库上创建一张空表，然后在从数据库上查看是否成功同步。<br>然后在从库上删除这张空表，然后在主数据库上查看是否成功同步。</p><h2 id="Nginx实现Mysql负载均衡"><a href="#Nginx实现Mysql负载均衡" class="headerlink" title="Nginx实现Mysql负载均衡"></a>Nginx实现Mysql负载均衡</h2><h2 id="读写分离方案（mysql-proxy）"><a href="#读写分离方案（mysql-proxy）" class="headerlink" title="读写分离方案（mysql-proxy）"></a>读写分离方案（mysql-proxy）</h2><p>读写分离方案主要解决的是“数据库读性能瓶颈”问题<br>水平拆分方案主要解决的是“数据库数据量大”问题<br>垂直拆分方案主要解决的是“数据库多字段引起的表IO”问题</p><h2 id="查看Mysql-binlog日志"><a href="#查看Mysql-binlog日志" class="headerlink" title="查看Mysql binlog日志"></a>查看Mysql binlog日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">show binlog events\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 4</span><br><span class="line"> Event_type: Format_desc</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 249</span><br><span class="line">       Info: Server ver: 10.1.37-MariaDB-1, Binlog ver: 4</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 249</span><br><span class="line"> Event_type: Gtid_list</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 274</span><br><span class="line">       Info: []</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 274</span><br><span class="line"> Event_type: Binlog_checkpoint</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 313</span><br><span class="line">       Info: mysql-bin.000001</span><br><span class="line">*************************** 4. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 313</span><br><span class="line"> Event_type: Gtid</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 351</span><br><span class="line">       Info: BEGIN GTID 0-1-1</span><br><span class="line">*************************** 5. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 351</span><br><span class="line"> Event_type: Query</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 476</span><br><span class="line">       Info: use `mysql`; update user <span class="built_in">set</span> Host=<span class="string">'192.168..42.28'</span> <span class="built_in">where</span> User=<span class="string">'slave_user'</span></span><br><span class="line">*************************** 6. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 476</span><br><span class="line"> Event_type: Query</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 546</span><br><span class="line">       Info: COMMIT</span><br><span class="line">*************************** 7. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 546</span><br><span class="line"> Event_type: Gtid</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 584</span><br><span class="line">       Info: BEGIN GTID 0-1-2</span><br><span class="line">*************************** 8. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 584</span><br><span class="line"> Event_type: Query</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 708</span><br><span class="line">       Info: use `mysql`; update user <span class="built_in">set</span> Host=<span class="string">'192.168.42.28'</span> <span class="built_in">where</span> User=<span class="string">'slave_user'</span></span><br><span class="line">*************************** 9. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 708</span><br><span class="line"> Event_type: Query</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 778</span><br><span class="line">       Info: COMMIT</span><br><span class="line">*************************** 10. row ***************************</span><br><span class="line">   Log_name: mysql-bin.000001</span><br><span class="line">        Pos: 778</span><br><span class="line"> Event_type: Stop</span><br><span class="line">  Server_id: 1</span><br><span class="line">End_log_pos: 797</span><br><span class="line">       Info:</span><br><span class="line">10 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL数据库主从复制技术主要有以下一些特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据分布 (Data distribution )&lt;/li&gt;
&lt;li&gt;负载均衡(load balancing)&lt;/li&gt;
&lt;li&gt;备份(Backups)&lt;/li&gt;
&lt;li&gt;高可用性和容错性 (High availability and failover)&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="Mysql主从" scheme="http://www.ilovesusu.com/tags/Mysql%E4%B8%BB%E4%BB%8E/"/>
    
      <category term="读写分离" scheme="http://www.ilovesusu.com/tags/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    
      <category term="负载均衡" scheme="http://www.ilovesusu.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Debian LNMP安装及优化</title>
    <link href="http://www.ilovesusu.com/2018/11/18/Debian-LNMP%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>http://www.ilovesusu.com/2018/11/18/Debian-LNMP安装及优化/</id>
    <published>2018-11-18T10:56:13.000Z</published>
    <updated>2018-12-21T11:51:43.606Z</updated>
    
    <content type="html"><![CDATA[<p>用LNMP很久了，这篇文章算是一个知识总结吧，初步计划会一直在本文章中更新Nginx的内容。</p><a id="more"></a><h2 id="LNMP环境搭建"><a href="#LNMP环境搭建" class="headerlink" title="LNMP环境搭建"></a>LNMP环境搭建</h2><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>首先，我们应该更新本地包索引，然后我们可以安装服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>在 Debian 中，Nginx安装完毕后将自动运行。Web浏览器中输入服务器IP地址，你将到Nginx的默认登陆页面：</p><blockquote><p><a href="http://IP地址" target="_blank" rel="noopener">http://IP地址</a> or <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a></p></blockquote><p><img src="./Nginx_default.png" alt="默认页面"></p><h3 id="安装mariaDB"><a href="#安装mariaDB" class="headerlink" title="安装mariaDB"></a>安装mariaDB</h3><p>当我们有了一个Web服务器，我们需要安装MySQL，MySQL是一个数据库管理系统，来存储和管理我们站点的数据。</p><p>您可以输入以下命令轻松安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure><blockquote><p>注意：在Debian 9中，MySQL项目的社区分支–MariaDB - 被打包为默认的MySQL变体。虽然MariaDB在大多数情况下运行良好，但如果您需要仅在Oracle的MySQL中找到的功能，则可以从MySQL开发人员维护的存储库中安装和使用软件包。要安装官方MySQL服务，请服用教程如何在Debian 9上安装最新的MySQL。</p></blockquote><p>现在已安装MySQL数据库软件，但其配置不完整。</p><p>为了服务器安全，我们可以运行一个安全脚本，询问我们是否要修改一些不安全的默认值。键入以下命令开始脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p>系统将要求您输入MySQL root帐户的密码。我们还没有设置它，所以只需点击ENTER。然后，系统会询问您是否要设置该密码。您应该键入y然后设置root密码。</p><p>对于这个脚本询问的其他问题，您应该按y。这将删除一些匿名用户和测试数据库，禁用远程root登录，并加载这些新规则，以便MySQL立即更新您所做的更改。</p><p>此时，您的数据库系统现已设置好并受到安全保护。</p><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>我们现在已经安装了Nginx以服务我们的页面和安装的MySQL来存储和管理我们的数据。但是，我们仍然没有任何可以生成动态内容的工具。这就是PHP的用武之地。</p><p>现在我们来设置PHP。</p><p>由于Nginx不像其他一些Web服务器那样包含对PHP脚本的处理，因此我们需要安装fpm，它代表”fastCGI进程管理器”。我们将告诉Nginx将PHP请求传递给该软件进行处理。我们还将安装一个额外的帮助程序包，允许PHP与我们的MySQL数据库后端进行通信。安装将引入必要的PHP核心文件以使其工作。<br>安装php-fpm和php-mysql包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install php-fpm php-mysql</span><br></pre></td></tr></table></figure><p>现在我们成功安装了PHP组件。接下来我们将配置Nginx以使用它们。</p><h3 id="配置Nginx以使用PHP-fpm"><a href="#配置Nginx以使用PHP-fpm" class="headerlink" title="配置Nginx以使用PHP-fpm"></a>配置Nginx以使用PHP-fpm</h3><p>现在我们已经安装了所有必需的组件。我们唯一需要的配置更改是告诉Nginx让我们的PHP处理器用于动态内容。</p><p>我们将保留默认的Nginx配置，创建一个新的配置文件和新的Web根目录来保存我们的PHP文件。我们将配置文件和目录命名为服务器的域名或主机名。</p><p>首先，创建一个新目录在/var/www下用来保存PHP站点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/www/your_domain</span><br></pre></td></tr></table></figure><p>然后，在Nginx的sites-available目录中打开一个新的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/your_domain</span><br></pre></td></tr></table></figure><p>这将创建一个新的空白文件。粘贴以下简单配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    root /var/www/your_domain;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    server_name your_domain;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        ##首先尝试将请求文件作为内容提供，如果请求是目录，返回显示404。</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;  ##将PHP脚本传递给FastCGI服务器</span><br><span class="line">        include snippets/fastcgi-php.conf; ##FastCGI配置</span><br><span class="line">        # php-fpm(unix套接字):</span><br><span class="line">        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</span><br><span class="line">        ##php-cgi(tcp套接字):</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个非常基本的配置，它侦听端口80并从我们刚创建的Web根目录提供文件。它只会响应关键字server_name后提供的名称的请求，并且在Nginx将结果发送给用户之前，任何 .php 结尾的文件都将由进程 php-fpm 处理。</p><p>完成自定义内容的修改后保存并关闭文件。</p><p>通过软链接链接到Nginx sites-enabled目录中的配置文件来激活您的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/your_domain.conf /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><p>接着输入以下内容测试您的配置是否存在语法错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果报告了任何错误，请返回并重新检查您的文件，然后再继续。</p><p>准备好后，重新加载Nginx进行更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>接下来，我们将在新的Web根目录中创建一个文件来测试PHP处理。</p><h3 id="创建PHP文件以测试配置"><a href="#创建PHP文件以测试配置" class="headerlink" title="创建PHP文件以测试配置"></a>创建PHP文件以测试配置</h3><p>现在我们完全安装了LNMP。但是我们还是需要测试Nginx是否可以正确地将.php文件传递给PHP-fpm进行处理。</p><p>我们可以通过在文档根目录中创建测试PHP文件来完成此操作。创建info.php新文件，并添加内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /var/www/your_domain/info.php</span><br></pre></td></tr></table></figure><p>在新文件中键入或粘贴以下行。这是 PHP代码，它将返回有关我们服务器的信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修改完成后，保存并退出并修改权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R www-data:www-data /var/www/your_domain/*</span><br></pre></td></tr></table></figure><p>现在，您可以通过在Web浏览器中访问服务器的域名或公共IP地址来访问此页面：</p><blockquote><p><a href="http://your_domain/info.php" target="_blank" rel="noopener">http://your_domain/info.php</a></p></blockquote><p>您应该看到PHP生成的网页，其中包含有关您的服务器的信息：</p><p><img src="./PHP_info.png" alt="php info"></p><p>如果您看到一个看起来像这样的页面，那么您已成功搭建了LNMP环境。</p><p>在验证完LNMP环境正确的页面后，最好删除您创建的文件，因为它实际上可以向未经授权的用户展示您的服务器的配置，这可能会使得您的服务器被入侵。</p><p>现在，输入以下命令删除文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/www/html/info.php</span><br></pre></td></tr></table></figure><p>如果以后需要测试，您可以随时重新生成此文件。</p><h2 id="Nginx基本操作"><a href="#Nginx基本操作" class="headerlink" title="Nginx基本操作"></a>Nginx基本操作</h2><p><a href="http://xXX" target="_blank" rel="noopener">查看Nginx配置详解</a></p><h3 id="Nginx默认虚拟主机"><a href="#Nginx默认虚拟主机" class="headerlink" title="Nginx默认虚拟主机"></a>Nginx默认虚拟主机</h3><p>当通过ip或者未知域名访问你的网站的时候，你希望禁止显示任何有效内容，可以给他返回500.<br>目前国内很多机房都要求网站主关闭空主机头，防止未备案的域名指向过来造成麻烦。就可以这样设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    return 500;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中default_server关键字就是指默认虚拟主机。</p><h3 id="Nginx多站点"><a href="#Nginx多站点" class="headerlink" title="Nginx多站点"></a>Nginx多站点</h3><h4 id="创建域名目录"><a href="#创建域名目录" class="headerlink" title="创建域名目录"></a>创建域名目录</h4><p>首先在/var/www/下创建域名目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/www/aaa.com /var/www/bbb.com</span><br></pre></td></tr></table></figure><p>这时/var/www/下是这样三个目录</p><blockquote><p>html Debian默认配置的主目录<br>aaa.com 网站aaa.com的主目录<br>bbb.com 网站bbb.com的主目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ls</span> /var/www/</span><br><span class="line">html aaa.com bbb.com</span><br></pre></td></tr></table></figure><h4 id="创建域名入口文件"><a href="#创建域名入口文件" class="headerlink" title="创建域名入口文件"></a>创建域名入口文件</h4><p>在这里为了演示方便，我们可以直接在第二步的两个目录中分别创建 index.html 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /var/www/aaa.com/index.html</span><br></pre></td></tr></table></figure><p>然后添加下面的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to aaa.com!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Success!  The aaa.com server is working!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对应的 bbb.com 我们可以这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /var/www/bbb.com/index.html</span><br></pre></td></tr></table></figure><p>在 bbb.com 这里添加下面的内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome to bbb.com!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Success!  The bbb.com server is working!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在/etc/nginx/sites-available/目录下添加配置文件</p><h4 id="创建不同的配置文件"><a href="#创建不同的配置文件" class="headerlink" title="创建不同的配置文件"></a>创建不同的配置文件</h4><p>在安装完 Nginx 之后，Nginx 的默认配置文件是 /etc/nginx/sites-available/default ，我们要配置多站点的话，可以复制一份默认配置文件用来修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/aaa.com</span><br><span class="line">sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/bbb.com</span><br></pre></td></tr></table></figure><p>然后编辑 /etc/nginx/sites-available/aaa.com 配置文件：</p><p>删除不必要的配置内容和注释，大概修改成下面的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line"></span><br><span class="line">        root /var/www/aaa.com/;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        server_name aaa.com www.aaa.com;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就配置完 aaa.com 了，接下来就照葫芦画瓢，我们修改 bbb.com 的配置文件，大概修改成一下内容便可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        listen [::]:80;</span><br><span class="line"></span><br><span class="line">        root /var/www/bbb.com/;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        server_name bbb.com www.bbb.com;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们的两个域名配置文件就设置好了。</p><h4 id="建立软链接"><a href="#建立软链接" class="headerlink" title="建立软链接"></a>建立软链接</h4><p>有了 aaa.com 和 bbb.com 的配置之后，我们需要启用这两个配置的使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/aaa.com /etc/nginx/sites-enabled/</span><br><span class="line">sudo ln -s /etc/nginx/sites-available/bbb.com /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure><p>执行上面的命令之后，我们再使用 nginx -t 检测 Nginx 的配置文件是否有错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果你没有看到报错，就可以直接重启 Nginx 服务了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>大功告成！</p><h3 id="Nginx用户认证"><a href="#Nginx用户认证" class="headerlink" title="Nginx用户认证"></a>Nginx用户认证</h3><p>有时候我们需要对一下web内容做一些访问限制，只有输入正确的用户密码才允许访问web内容。<br>当web上的一些内容不想被其他人知道，但是又想让部分人看到时，nginx的http auth模块以及Apache http auth都是很好的解决方案。</p><h4 id="第1步-安装Apache-Tools"><a href="#第1步-安装Apache-Tools" class="headerlink" title="第1步 - 安装Apache Tools"></a>第1步 - 安装Apache Tools</h4><p>因为需要htpassword命令来配置密码。而此命令是apache2-utils包的一部分，因此第一步是安装该程序包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2-utils</span><br></pre></td></tr></table></figure><h4 id="步骤2-设置HTTP基本身份验证凭据"><a href="#步骤2-设置HTTP基本身份验证凭据" class="headerlink" title="步骤2 - 设置HTTP基本身份验证凭据"></a>步骤2 - 设置HTTP基本身份验证凭据</h4><p>现在我们为运行网站的用户创建密码。</p><p>该密码和关联的用户名将存储在您指定的文件中。密码将被加密，文件名可以是您喜欢的任何名称。<br>我们创建并使用文件/etc/nginx/.htpasswd和用户名nginx。</p><p>要创建密码，请运行以下命令。您需要进行身份验证，然后指定并确认密码。其中参数 -c 是创建文件，以后要添加新用户要 去处-c ，不然会直接生成新文件而不是追加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo htpasswd -c /etc/nginx/.htpasswd nginx</span><br></pre></td></tr></table></figure><p>查看文件中的用户名和散列密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/nginx/.htpasswd</span><br><span class="line">nginx:<span class="variable">$apr1</span><span class="variable">$AH5oNlri</span><span class="variable">$yIwoaNJymwXd04UTGTw0</span>/1</span><br></pre></td></tr></table></figure><h4 id="第3步-更新Nginx配置"><a href="#第3步-更新Nginx配置" class="headerlink" title="第3步 - 更新Nginx配置"></a>第3步 - 更新Nginx配置</h4><p>既然已经创建了HTTP基本身份验证凭据文件，那么下一步就是更新Nginx配置来使用它。<br>使用nano或您喜欢的文本编辑器打开该文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>在location部分下，添加两个指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    # First attempt to serve request as file, then</span><br><span class="line">    # as directory, then fall back to displaying a 404.</span><br><span class="line">    try_files $uri $uri/ =404;</span><br><span class="line">    ## 值自定义用于浏览器中显示名称</span><br><span class="line">    auth_basic &quot;Auth&quot;;</span><br><span class="line">    ## 值为htpasswd生成的文件地址绝对路径</span><br><span class="line">    auth_basic_user_file /etc/nginx/.htpasswd;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h4 id="第4步-测试安装程序"><a href="#第4步-测试安装程序" class="headerlink" title="第4步 - 测试安装程序"></a>第4步 - 测试安装程序</h4><p>要应用更改，请先测试Nginx配置文件是否有错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果你没有看到报错，就可以直接重启 Nginx 服务了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>现在尝试访问您刚刚保护的网站。您应该看到一个身份验证窗口（显示”Auth”，是设置的auth_basic关键字的值，），在您输入正确的凭据之前，您将无法访问该网站。如果输入您设置的用户名和密码，您将看到默认的Nginx主页。</p><h4 id="加密admin目录"><a href="#加密admin目录" class="headerlink" title="加密admin目录"></a>加密admin目录</h4><p>有些时候我们需要加密的目录是admin目录，或者一些内部专有目录，那么只要按照下面所示进行内容配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">server_name localhost;</span><br><span class="line"></span><br><span class="line">location /admin/ &#123;</span><br><span class="line">    auth_basic &quot;Auth&quot;;</span><br><span class="line">    auth_basic_user_file /etc/nginx/.htpasswd;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="Nginx域名重定向"><a href="#Nginx域名重定向" class="headerlink" title="Nginx域名重定向"></a>Nginx域名重定向</h3><p>有时候我们需要将test.com test1.com test2.com这几个域名都跳转到test.com，则需要这样配置test.com.conf文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    ##  server_name后面支持写多个域</span><br><span class="line">    server_name test.com test1.com test2.com;</span><br><span class="line">    index index.html index.htm index.php;</span><br><span class="line">    root /data/wwwroot/test.com;</span><br><span class="line">    if ($host != &apos;test.com&apos; ) &#123;</span><br><span class="line">        ## permanent为永久重定向，状态码为301，redirect则为302</span><br><span class="line">        rewrite  ^/(.*)$  http://test.com/$1  permanent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述配置^/(.)$以及!=是正则表达式<br>语法规则：location [=|~|~|^~] /uri/ { … }</p><table><thead><tr><th>模式</th><th>含义</th></tr></thead><tbody><tr><td>location = /uri</td><td>= 表示精确匹配，只有完全匹配上才能生效</td></tr><tr><td>location ^~ /uri</td><td>^~ 开头对URL路径进行前缀匹配,~表示区分大小写。</td></tr><tr><td>location ~ pattern</td><td>表示区分大小写的正则匹配</td></tr><tr><td>location ~* pattern</td><td>表示不区分大小写的正则匹配</td></tr><tr><td>location /uri</td><td>不带任何修饰符，也表示前缀匹配，但是在正则匹配之后</td></tr><tr><td>location /</td><td>通用匹配，任何未匹配到其它location的请求都会匹配到</td></tr></tbody></table><h3 id="Nginx日志格式配置及日志审查操作"><a href="#Nginx日志格式配置及日志审查操作" class="headerlink" title="Nginx日志格式配置及日志审查操作"></a>Nginx日志格式配置及日志审查操作</h3><p>Nginx日志对于统计、系统服务排错很有用。Nginx日志主要分为两种：access_log(访问日志)和error_log(错误日志)。通过访问日志我们可以得到用户的IP地址、浏览器的信息，请求的处理时间等信息。错误日志记录了访问出错的信息，可以帮助我们定位错误的原因。</p><h4 id="access-log-访问日志"><a href="#access-log-访问日志" class="headerlink" title="access_log(访问日志)"></a>access_log(访问日志)</h4><p>在 Debian中，Nginx预定义了名为combined日志格式，如果没有明确指定日志格式默认使用该格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_format combined &apos;$remote_addr - $remote_user [$time_local] &apos;</span><br><span class="line">                    &apos;&quot;$request&quot; $status $body_bytes_sent &apos;</span><br><span class="line">                    &apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot;&apos;;</span><br></pre></td></tr></table></figure><p>如果不想使用Nginx预定义的格式，可以通过log_format指令来自定义。</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_format name [escape=default|json] string ...;</span><br></pre></td></tr></table></figure><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>可以应用access_log指令的作用域分别有http，server，location，limit_except。也就是说，在这几个作用域外使用该指令，Nginx会报错。</p><p>以下是access_log指令的基本语法和参数的含义。</p><table><thead><tr><th>变量</th><th>含义</th></tr></thead><tbody><tr><td>$bytes_sent</td><td>发送给客户端的总字节数</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端的字节数，不包括响应头的大小</td></tr><tr><td>$connection</td><td>连接序列号</td></tr><tr><td>$connection_requests</td><td>当前通过连接发出的请求数量</td></tr><tr><td>$msec</td><td>日志写入时间，单位为秒，精度是毫秒</td></tr><tr><td>$pipe</td><td>如果请求是通过http流水线发送，则其值为”p”，否则为”.”</td></tr><tr><td>$request_length</td><td>请求长度（包括请求行，请求头和请求体）</td></tr><tr><td>$request_time</td><td>请求处理时长，单位为秒，精度为毫秒，从读入客户端的第一个字节开始，直到把最后一个字符发送张客户端进行日志写入为止</td></tr><tr><td>$status</td><td>响应状态码</td></tr><tr><td>$time_iso8601</td><td>标准格式的本地时间,形如”2018-05-24T18:31:27+08:00”</td></tr><tr><td>$time_local</td><td>通用日志格式下的本地时间，如”24/May/2018:18:31:27 +0800”</td></tr><tr><td>$http_referer</td><td>请求的referer地址。</td></tr><tr><td>$http_user_agent</td><td>客户端浏览器信息。</td></tr><tr><td>$remote_addr</td><td>客户端IP</td></tr><tr><td>$http_x_forwarded_for</td><td>当前端有代理服务器时，设置web节点记录客户端地址的配置，此参数生效的前提是代理服务器也要进行相关的x_forwarded_for设置。</td></tr><tr><td>$request</td><td>完整的原始请求行，如 “GET / HTTP/1.1”</td></tr><tr><td>$remote_user</td><td>客户端用户名称，针对启用了用户认证的请求</td></tr><tr><td>$request_uri</td><td>完整的请求地址，如 “<a href="https://sumi.ml/" target="_blank" rel="noopener">https://sumi.ml/</a>“</td></tr></tbody></table><p>下面我们看一几个例子加深一下理解。<br>例如以下自定义格式，作用域是http</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">http &#123;</span><br><span class="line">    access_log /var/log/nginx/access.log custom;</span><br><span class="line">    log_format  custom  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                    &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                    &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着重启Nginx以后访问网站并查看日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [1/Nov/2018:14:07:20 +0800] &quot;GET /favicon.ico HTTP/1.1&quot; 401 597 &quot;http://127.0.0.1/&quot; &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><p>我们看到最终的日志记录中$remote_user、$http_x_forwarded_for都对应了一个-，这是因为这几个变量为空。</p><h4 id="error-log-错误日志"><a href="#error-log-错误日志" class="headerlink" title="error_log(错误日志)"></a>error_log(错误日志)</h4><p>错误日志在Nginx中是通过error_log指令实现的。该指令记录服务器和请求处理过程中的错误信息。</p><p>语法<br>配置错误日志文件的路径和日志级别。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_log file [level];</span><br></pre></td></tr></table></figure><p>默认级别为error:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_log /var/log/nginx/error.log error;</span><br></pre></td></tr></table></figure><ul><li>第一个参数指定日志的写入位置。</li><li>第二个参数指定日志的级别。level可以是debug, info, notice, warn, error, crit, alert,emerg中的任意值。可以看到其取值范围是按紧急程度从低到高排列的。只有日志的错误级别等于或高于level指定的值才会写入错误日志中。默认值是error。</li></ul><p>基本用法</p><p>例子中指定了错误日志的路径为：/var/logs/nginx/nginx-error.log，日志级别使用默认的error。</p><p><code>error_log /var/log/nginx/error.log;</code></p><p>作用域<br>它可以配置在：main,http, mail, stream, server,location。</p><h4 id="日志分割"><a href="#日志分割" class="headerlink" title="日志分割"></a>日志分割</h4><h5 id="自己写脚本"><a href="#自己写脚本" class="headerlink" title="自己写脚本"></a>自己写脚本</h5><p>编写nginx日志分割脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">LOGS_PATH=/var/<span class="built_in">log</span>/nginx/</span><br><span class="line">YESTERDAY=$(date -d <span class="string">"yesterday"</span> +%Y-%m-%d)</span><br><span class="line">cp <span class="variable">$&#123;LOGS_PATH&#125;</span>/access.log <span class="variable">$&#123;LOGS_PATH&#125;</span>/access_<span class="variable">$&#123;YESTERDAY&#125;</span>.<span class="built_in">log</span> &amp;&amp; &gt;<span class="variable">$&#123;LOGS_PATH&#125;</span>/access.log</span><br><span class="line">cp <span class="variable">$&#123;LOGS_PATH&#125;</span>/error.log <span class="variable">$&#123;LOGS_PATH&#125;</span>/error_<span class="variable">$&#123;YESTERDAY&#125;</span>.<span class="built_in">log</span> &amp;&amp; &gt;<span class="variable">$&#123;LOGS_PATH&#125;</span>/error.log</span><br></pre></td></tr></table></figure><p>设置定时任务运行脚本</p><p><code>sudo crontab -u root -e</code></p><p>内容如下</p><p><code>0 0 * * *  /usr/local/nginx/logs/NginxLogRotate.sh</code></p><h4 id="使用logrotate"><a href="#使用logrotate" class="headerlink" title="使用logrotate"></a>使用logrotate</h4><h3 id="Nginx日志过滤静态文件访问记录"><a href="#Nginx日志过滤静态文件访问记录" class="headerlink" title="Nginx日志过滤静态文件访问记录"></a>Nginx日志过滤静态文件访问记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">    root /var/www/your_domain;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">    server_name your_domain;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires         7d;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~.*\.(js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">        expires    12h;</span><br><span class="line">        acces_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nginx防盗链"><a href="#Nginx防盗链" class="headerlink" title="Nginx防盗链"></a>Nginx防盗链</h3><p>首先去要理解什么是<strong>盗链</strong><br>请求一个网页时，首先会传回该网页的文本内容，当客户端 浏览器在解析文本的过程中发现有图片资源需要展示时，会再次向服务器发起对该图片资源的请求，服务器将存储的图片资源再发送给客户端。<br>在上述过程中，如果别人的服务器上只包含了网页的文本内容，并没有存储相关的图片资源，而是将图片资源链接到你的站点的服务器上，那么你的服务器就会成为他人的资源池,这就形成了盗链行为<br>通常，我们不希望自己的服务器成为他人的资源池,所以需要做防盗链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~* \.(gif|jpg|png|swf|flv)$ &#123;</span><br><span class="line">    valid_referers none blocked *.nginxcn.com;</span><br><span class="line">    if ($invalid_referer) &#123;</span><br><span class="line">        rewrite ^/ /xxx.png</span><br><span class="line">        #return 404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Nginx-referer指令语法说明"><a href="#Nginx-referer指令语法说明" class="headerlink" title="Nginx referer指令语法说明"></a>Nginx referer指令语法说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">valid_referers none | blocked | server_names | string …;</span><br><span class="line">默认值: -</span><br><span class="line">配置段: server, location</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">none：&quot;Referer&quot; 来源头部为空的情况</span><br><span class="line">blocked：&quot;Referer&quot;来源头部不为空，但是里面的值被代理或者防火墙删除了，这些值都不以http://或者https://开头.</span><br><span class="line">server_names：&quot;Referer&quot;来源头部包含当前的server_names（当前域名）</span><br><span class="line">arbitrary string：任意字符串,定义服务器名或者可选的URI前缀.主机名可以使用*开头或者结尾，在检测来源头部这个过程中，来源域名中的主机端口将会被忽略掉</span><br><span class="line">regular expression：正则表达式,~表示排除https://或http://开头的字符串.</span><br></pre></td></tr></table></figure><h2 id="Nginx-访问控制"><a href="#Nginx-访问控制" class="headerlink" title="Nginx 访问控制"></a>Nginx 访问控制</h2><h2 id="Nginx-反向代理"><a href="#Nginx-反向代理" class="headerlink" title="Nginx 反向代理"></a>Nginx 反向代理</h2><h2 id="Nginx-负载均衡"><a href="#Nginx-负载均衡" class="headerlink" title="Nginx  负载均衡"></a>Nginx  负载均衡</h2><h2 id="Nginx-使用Https"><a href="#Nginx-使用Https" class="headerlink" title="Nginx 使用Https"></a>Nginx 使用Https</h2><h2 id="LNMP-优化"><a href="#LNMP-优化" class="headerlink" title="LNMP 优化"></a>LNMP 优化</h2><h2 id="PHP-fpm-优化"><a href="#PHP-fpm-优化" class="headerlink" title="PHP-fpm 优化"></a>PHP-fpm 优化</h2><h3 id="POOL"><a href="#POOL" class="headerlink" title="POOL"></a>POOL</h3><h3 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用LNMP很久了，这篇文章算是一个知识总结吧，初步计划会一直在本文章中更新Nginx的内容。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian" scheme="http://www.ilovesusu.com/categories/Debian/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/categories/Debian/Linux/"/>
    
    
      <category term="LNMP安装" scheme="http://www.ilovesusu.com/tags/LNMP%E5%AE%89%E8%A3%85/"/>
    
      <category term="LNMP优化" scheme="http://www.ilovesusu.com/tags/LNMP%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Debian Gun/Linux 搭建pyqt5开发环境</title>
    <link href="http://www.ilovesusu.com/2018/10/10/Debian-Gun-Linux-%E6%90%AD%E5%BB%BApyqt5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.ilovesusu.com/2018/10/10/Debian-Gun-Linux-搭建pyqt5开发环境/</id>
    <published>2018-10-10T10:55:03.000Z</published>
    <updated>2018-12-15T14:02:12.167Z</updated>
    
    <content type="html"><![CDATA[<p>PyQt是Python GUI编程可选方案之一。可以用来代替Python内置的Tkinter。Python可以的其他GUI库有PyGTK、wxPython等。<br>PyQt是Qt库的python绑定,QT还有可用于 C、Java、Perl 和 Ruby 的绑定。</p><a id="more"></a><p>在Linux上安装PyQt的方法有很多,这里我们展示以下几种.</p><h2 id="利用-virtualenv-进行pip安装"><a href="#利用-virtualenv-进行pip安装" class="headerlink" title="利用 virtualenv 进行pip安装"></a>利用 virtualenv 进行pip安装</h2><p>这里就直接使用Pycharm来演示吧!</p><p>首先打开Pycharm,然后创建一个项目,选择使用Virtualenv</p><p><img src="./pycharm_venv.png" alt="创建项目"></p><p>创建成功以后项目中会生成一个venv的文件夹,这是一个虚拟的python环境,你可以通过命令行中pip安装您需要的包,也可以在setting中选择project[项目名称]–&gt; project interpreter 搜索安装需要的包.如下图所示</p><p><img src="./gui_install_pkg.png" alt="安装包"></p><h2 id="使用Debian-deb包安装"><a href="#使用Debian-deb包安装" class="headerlink" title="使用Debian deb包安装"></a>使用Debian deb包安装</h2><h2 id="为什么-目前-不使用-Debian-的-pip-进行安装"><a href="#为什么-目前-不使用-Debian-的-pip-进行安装" class="headerlink" title="为什么[目前]不使用 Debian 的 pip 进行安装"></a>为什么[目前]不使用 Debian 的 pip 进行安装</h2><p>首先需要声明,书写本文时 Debian Testing python3-pip 的版本是 9.0.1-2.3,而Python官方的pip已经是18.1了,为什么Debian不对pip进行版本升级呢?其实这是一系列历史遗留问题导致的</p><p>由于Debian 同时支持Python2/3 在打包的时候也想做到软件包同时支持py2/3,这是一个很好的想法,也通过一些办法实现了,但是某天pip上游说从某版本开始不支持py2了,这个时候那些自动化打包脚本就不能使用了,因为脚本会生成同时支持py2/3的包,但是9.0.1+++以上就不支持py2了.这会导致一系列的包被破坏,所以目前Testing中pip一直没有升级,这样的软件包还有很多,但是<strong>不用担心</strong>,因为Debian已经开始<a href="https://www.debian.org/doc/packaging-manuals/python-policy/python3.html" target="_blank" rel="noopener">移除Python2</a>,虽然不知道什么时候所有的py2包能全部移除完毕,但是那时,pip安装pyqt5就不是问题啦!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PyQt是Python GUI编程可选方案之一。可以用来代替Python内置的Tkinter。Python可以的其他GUI库有PyGTK、wxPython等。&lt;br&gt;PyQt是Qt库的python绑定,QT还有可用于 C、Java、Perl 和 Ruby 的绑定。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian" scheme="http://www.ilovesusu.com/categories/Debian/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/categories/Debian/Linux/"/>
    
    
      <category term="pyqt5" scheme="http://www.ilovesusu.com/tags/pyqt5/"/>
    
      <category term="搭建pyqt5开发环境" scheme="http://www.ilovesusu.com/tags/%E6%90%AD%E5%BB%BApyqt5%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="开发环境" scheme="http://www.ilovesusu.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>从零开始,学习web前端之HTML/CSS 速写神器：Emmet(转载)</title>
    <link href="http://www.ilovesusu.com/2018/09/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-%E5%AD%A6%E4%B9%A0web%E5%89%8D%E7%AB%AF%E4%B9%8BHTML-CSS-%E9%80%9F%E5%86%99%E7%A5%9E%E5%99%A8%EF%BC%9AEmmet-%E8%BD%AC%E8%BD%BD/"/>
    <id>http://www.ilovesusu.com/2018/09/12/从零开始-学习web前端之HTML-CSS-速写神器：Emmet-转载/</id>
    <published>2018-09-12T03:46:41.000Z</published>
    <updated>2018-12-15T14:50:46.024Z</updated>
    
    <content type="html"><![CDATA[<p>转载于：<a href="http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/" target="_blank" rel="noopener">http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/</a></p><p>在前端开发的过程中，一个最繁琐的工作就是写 HTML、CSS 代码。数量繁多的标签、属性、尖括号、标签闭合等，让前端们甚是苦恼。于是，我向大家推荐 Emmet，它提供了一套非常简单的语法规则，书写起来非常爽快，然后只需要敲一个快捷键就立刻生成对应的 HTML 或 CSS 代码，极大提高了代码书写效率。</p><a id="more"></a><p><img src="./emmet-demo.gif" alt="Emmet"></p><p><a href="http://emmet.io/" target="_blank" rel="noopener">Emmet</a> 的前身是大名鼎鼎的 Zen coding，它是一个编辑器插件，需要基于指定的编辑器使用，官方网站提供多编辑器支持，目前它支持的编辑器如下：</p><p><a href="https://github.com/sergeche/emmet-sublime#readme" target="_blank" rel="noopener">Sublime Text</a><br><a href="https://github.com/emmetio/emmet-eclipse#readme" target="_blank" rel="noopener">Eclipse/Aptana</a><br><a href="https://github.com/emmetio/Emmet.tmplugin#readme" target="_blank" rel="noopener">TextMate</a><br><a href="https://github.com/emmetio/Emmet.codaplugin#readme" target="_blank" rel="noopener">Coda</a><br><a href="https://github.com/emmetio/Emmet.sugar#readme" target="_blank" rel="noopener">Espresso</a><br><a href="https://github.com/sergeche/emmet.chocmixin#readme" target="_blank" rel="noopener">Chocolat</a><br><a href="http://community.activestate.com/xpi/zen-coding" target="_blank" rel="noopener">Komodo Edit</a><br><a href="https://github.com/emmetio/npp#readme" target="_blank" rel="noopener">Notepad++</a><br><a href="https://github.com/emmetio/pspad" target="_blank" rel="noopener">PSPad</a><br><a href="https://github.com/emmetio/textarea" target="_blank" rel="noopener">textarea</a><br><a href="https://github.com/emmetio/codemirror#readme" target="_blank" rel="noopener">CodeMirror</a><br><a href="https://github.com/emmetio/brackets-emmet#readme" target="_blank" rel="noopener">Brackets</a><br><a href="https://github.com/emmetio/netbeans#readme" target="_blank" rel="noopener">NetBeans</a><br><a href="https://github.com/emmetio/dreamweaver#readme" target="_blank" rel="noopener">Adobe Dreamweaver</a></p><p>请参照上面列表安装对应的编辑器插件，我一般使用 Sublime Text 3，下面就以 Sublime Text 3 插件 为例，讲解 Emmet 的安装、基础语法。</p><h2 id="在-Sublime-text-3-中安装-Emmet"><a href="#在-Sublime-text-3-中安装-Emmet" class="headerlink" title="在 Sublime text 3 中安装 Emmet"></a>在 Sublime text 3 中安装 Emmet</h2><p>目前，Emmet 已经可以通过 Package Control 安装了。如果你的 Sublime Text 3 还没有安装 Package Control，请参照以下方法安装，已经安装的童鞋请自行跳过。</p><h3 id="为-Sublime-Text-3-安装-Package-Control-组件："><a href="#为-Sublime-Text-3-安装-Package-Control-组件：" class="headerlink" title="为 Sublime Text 3 安装 Package Control 组件："></a>为 Sublime Text 3 安装 Package Control 组件：</h3><ol><li>按 Ctrl + ` 打开控制台，粘贴以下代码到底部命令行并回车：<blockquote><p>import urllib.request,os; pf = ‘Package Control.sublime-package’; ipp =   sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), ‘wb’).write(urllib.request.urlopen( ‘<a href="http://sublime.wbond.net/" target="_blank" rel="noopener">http://sublime.wbond.net/</a>‘ + pf.replace(‘ ‘,’%20’)).read())</p></blockquote></li><li>重启 Sublime Text 3</li><li>在 Perferences-&gt;Package Settings 中看到 Package Control，则表示安装成功</li></ol><h3 id="使用-Package-Control-安装-Emmet-插件："><a href="#使用-Package-Control-安装-Emmet-插件：" class="headerlink" title="使用 Package Control 安装 Emmet 插件："></a>使用 Package Control 安装 Emmet 插件：</h3><ol><li>在 Package Control 中选择 Install package 或者按 Ctrl+Shift+P，打开命令板</li><li>输入 pci 然后选择 Install Package</li><li>搜索输入 emmet 找到 Emmet Css Snippets，点击就可以自动完成安装。</li></ol><h3 id="快速体验-Emmet"><a href="#快速体验-Emmet" class="headerlink" title="快速体验 Emmet"></a>快速体验 Emmet</h3><p>Emmet 可以快速的编写 HTML、CSS 以及实现其他的功能。它根据当前文件的<strong>解析模式</strong>来判断要使用 HTML 语法还是 CSS 语法来解析。例如当前文件的后缀为 .html 那 Sublime text 3 就会用 HTML 的解析模式来解析高亮这个文件，Emmet 遇到里面的指令就会根据 HTML 的语法把它编译成 HTML 结构。如果是在一个 .c 的 C 语言文件中，你写出来的用于编译 HTML 指令就不会被 Emmet 识别编译。</p><p>此外，在没有后缀的文件中，你可以按下<code>shift + ctrl + p</code>呼出面板，输入<code>seth</code>就可以设置当前文件的解析模式为 HTML 。了解这些之后，下面我们来见证强大的 Emmet。</p><p>如果让你编写下面的这个 HTML 结构，你需要多长时间？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"navigation"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Item 5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然而，这一切你只需要编写下面这一句按照 Emmet 语法写出来的语句，然后用 Emmet 编译一下，就可以生成了！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#page&gt;div.logo+ul#navigation&gt;li*5&gt;a&#123;Item $&#125;</span><br></pre></td></tr></table></figure><p>我们把它复制到 Sublime text 3 中已经打开的 HTML 文件中，这时候紧跟着敲击一下 TAB 键，见证奇迹的时刻到来了。</p><p>怎么样？很神奇吧，仅仅写一行代码，就可以生成这么一个复杂的 HTML 结构，而且还可以生成对应的 class 、id 和有序号的内容。而且 Emmet 的语法很简单，虽然你现在可能还看不懂，后面的系列教程会详细讲解它的语法，你现在只需要知道 Emmet 的工作流程：</p><blockquote><p>打开 HTML 或 CSS 文件-&gt;按语法编写指令-&gt;按下 TAB 键-&gt;生成</p></blockquote><h2 id="快速编写HTML代码"><a href="#快速编写HTML代码" class="headerlink" title="快速编写HTML代码"></a>快速编写HTML代码</h2><h3 id="生成-HTML-文档初始结构"><a href="#生成-HTML-文档初始结构" class="headerlink" title="生成 HTML 文档初始结构"></a>生成 HTML 文档初始结构</h3><p>HTML文档需要包含一些固定的标签，比如 doctype、html、head、body 以及 meta 等等，现在你只需要1秒钟就可以输入这些标签。比如输入<code>!</code>或<code>html:5</code>，然后按 Tab 键：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt; <span class="attr">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这就是一个 HTML5 的标准结构，也是默认的 HTML 结构。如果你想生成 HTML4 的过渡型结构，那么输入指令 html:xt 即可生成如下结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt; <span class="attr">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Emmet 会自动把 doctype 给你补全了，怎么样，这样的功能会不会让你动心？</p><p>简单总结一下常用的 HTML 结构指令：</p><ul><li>html:5 或者 ! 生成 HTML5 结构</li><li>html:xt 生成 HTML4 过渡型</li><li>html:4s 生成 HTML4 严格型</li></ul><h3 id="生成带有-id-、class-的-HTML-标签"><a href="#生成带有-id-、class-的-HTML-标签" class="headerlink" title="生成带有 id 、class 的 HTML 标签"></a>生成带有 id 、class 的 HTML 标签</h3><p>Emmet 默认的标签为 div，如果我们不给出标签名称的话，默认就生成 div 标签。生成 id 为 page 的 div 标签，我们只需要编写下面指令：</p><p><code>div#page</code></p><p>或者使用默认标签的方式：</p><p><code>#page</code></p><p>如果编写一个 class 为 content 的 p 标签，我们需要编写下面指令：</p><p><code>p.content</code></p><p>同时指定标签的 id 和 class，如生成 id 为 navigation，class 为 nav 的 ul 标签：</p><p><code>ul#navigation.nav</code></p><p>指定多个 class，如上例中还需要给 ul 指定一个 class 为 dropdown：</p><p><code>ul#navigation.nav.dropdown</code></p><p>生成的 HTML 结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"navigation"</span> <span class="attr">class</span>=<span class="string">"nav dropdown"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="兄弟："><a href="#兄弟：" class="headerlink" title="兄弟：+"></a>兄弟：+</h3><p>生成标签的兄弟标签，即平级元素，使用指令 + ，例如下面指令：</p><p><code>div+ul+bq</code></p><p>生成的 HTML 结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="后代：-gt"><a href="#后代：-gt" class="headerlink" title="后代：&gt;"></a>后代：&gt;</h3><blockquote><p>表示后面要生成的内容是当前标签的后代。例如我要生成一个无序列表，而且被 class 为 nav 的 div 包裹，那么可以使用下面指令：</p></blockquote><p><code>div.nav&gt;ul&gt;li</code></p><p>生成的 HTML 结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="上级元素："><a href="#上级元素：" class="headerlink" title="上级元素：^"></a>上级元素：^</h3><p>上级 （Climb-up）元素是什么意思呢？前面咱们说过了生成下级元素的符号“&gt;”，当使用 <code>div&gt;ul&gt;li</code> 的指令之后，再继续写下去，那么后续内容都是在 li 下级的。如果我想编写一个跟 ul 平级的 span 标签，那么我需要先用 “^” 提升一下层次。例如：</p><p><code>div.nav&gt;ul&gt;li^span</code></p><p>就会生成如下结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果我想相对与 div 生成一个平级元素，那么就再上升一个层次，多用一个 “^” 符号：</p><p><code>div.nav&gt;ul&gt;li^^span</code></p><p>结果如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="重复多份："><a href="#重复多份：" class="headerlink" title="重复多份：*"></a>重复多份：*</h3><p>特别是一个无序列表，ul 下面的 li 肯定不只是一份，通常要生成很多个 li 标签。那么我们可以直接在 li 后面 * 上一些数字：</p><p><code>ul&gt;li*5</code></p><p>这样就直接生成五个项目的无序列表了。如果想要生成多份其他结构，方法类似。</p><h3 id="分组："><a href="#分组：" class="headerlink" title="分组：()"></a>分组：()</h3><p>用括号进行分组，表示一个代码块，分组内部的嵌套和层级关系和分组外部无关，例如：</p><p><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></p><p>生成结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出整个分组成为 div 的后代，并且分组与 footer 平级。此外，分组还可以很方便的结合上面说的 “*” 符号生成重复结构：</p><p><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></p><p>生成结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性：-attr"><a href="#属性：-attr" class="headerlink" title="属性：[attr]"></a>属性：[attr]</h3><p>a 标签中往往需要附带 href 属性和 title 属性，如果我们想生成一个 href 为 “<a href="http://bubkoo.com" target="_blank" rel="noopener">http://bubkoo.com</a>” ，title 为“bubkoo’s blog”的 a 标签，可以这样写：</p><p><code>a[href=&quot;http://bubkoo.com&quot; title=&quot;bubkoo&#39;s blog&quot;]</code></p><p>此外，也可以生成一些自定义属性：</p><p><code>div[data-title=&quot;bubkoo&#39;s blog&quot; data-content=&quot;CUCKOO USHERS SPRING IN&quot;]</code></p><p>就会生成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-title</span>=<span class="string">"bubkoo's blog"</span> <span class="attr">data-content</span>=<span class="string">"CUCKOO USHERS SPRING IN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编号："><a href="#编号：" class="headerlink" title="编号：$"></a>编号：$</h3><p>例如无序列表，我想为五个个 li 增加一个 class 属性值 item1 ，然后依次递增从 1-5，那么就需要使用 $ 符号：</p><p><code>ul&gt;li.item$*5</code></p><p>结构是：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>$</code> 表示一位数字，只出现一个的话，就从 1 开始，如果出现多个，就从 0 开始。<br>如果我想生成三位数的序号，那么要写三个 <code>$</code>：</p><p><code>ul&gt;li.item$$$*5</code></p><p>输出：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item001"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item002"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item003"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item004"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item005"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此外，也可以在 $ 后面增加 @- 来实现倒序排列：</p><p><code>ul&gt;li.item$@-*5</code></p><p>输出：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时，还可以使用 @N 指定开始的序号：</p><p><code>ul&gt;li.item$@3*5</code></p><p>那么输出：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item6"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item7"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配合上面倒序输出，可以这样写：</p><p><code>ul&gt;li.item$@-3*5</code></p><p>就可以生成以 3 为底倒序列表：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item7"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item6"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本内容："><a href="#文本内容：" class="headerlink" title="文本内容：{}"></a>文本内容：{}</h3><p>生成超链接一般要加上可点击的文本内容，如上面的连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[href=&quot;http://bubkoo.com&quot; title=&quot;bubkoo&apos;s blog&quot;]&#123;猛击这里&#125;</span><br></pre></td></tr></table></figure><p>就会生成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://bubkoo.com"</span> <span class="attr">title</span>=<span class="string">"bubkoo's blog"</span>&gt;</span>猛击这里<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外，在生成内容的时候，特别要注意前后的符号关系，虽然 a&gt;{Click me} 和 a{Click me} 生成的结构是相同的，但是加上其他的内容就不一定了，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- a&#123;click&#125;+b&#123;here&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>here<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- a&gt;&#123;click&#125;+b&#123;here&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>click<span class="tag">&lt;<span class="name">b</span>&gt;</span>here<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="隐式标签"><a href="#隐式标签" class="headerlink" title="隐式标签"></a>隐式标签</h3><p>隐式标签表示 Emmet 可以省略某些标签名，例如，声明一个带类的div，只需输入.item，就会生成<div class="item"></div>。另外，Emmet 还会根据父标签进行判定，例如，在中输入ul&gt;.item$*5，就可以生成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item4"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item5"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面是所有的隐式标签名称：</p><ul><li>li：用于 ul 和 ol 中</li><li>tr：用于 table、tbody、thead 和 tfoot 中</li><li>td：用于 tr 中</li><li>option：用于 select 和 optgroup 中</li></ul><h3 id="不要有空格"><a href="#不要有空格" class="headerlink" title="不要有空格"></a>不要有空格</h3><p>在写指令的时候，你可能为了代码的可读性，使用一些空格什么的排版一下。这就会导致代码无法使用。例如下面这句：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- a&#123;click&#125;+b&#123;here&#125; --&gt;</span></span><br><span class="line">(header &gt; ul.nav &gt; li*5) + footer</span><br></pre></td></tr></table></figure><p>执行结果会不是你所希望的那样，所以，<strong>指令之间不要有空格</strong>。</p><p>HTML 简写规则简单总结</p><ol><li>E 代表HTML标签。</li><li>E#id 代表id属性。</li><li>E.class 代表class属性。</li><li>E[attr=foo] 代表某一个特定属性。</li><li>E{foo} 代表标签包含的内容是foo。</li><li>E&gt;N 代表N是E的子元素。</li><li>E+N 代表N是E的同级元素。</li><li>E^N 代表N是E的上级元素。</li></ol><h3 id="飞一般的-CSS-书写"><a href="#飞一般的-CSS-书写" class="headerlink" title="飞一般的 CSS 书写"></a>飞一般的 CSS 书写</h3><p>首先，<a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text 3</a> 已经提供了比较强大的 CSS 样式所写方法来提高 CSS 编写效率。例如编写 position: absolute; 这一个属性，我们只需要输入 posa 这四个字母即可。可以在平时书写过程中，留意一下 ST3 提供了哪些属性的缩写方法，这样就可以提高一定的效率了。但是 Emmet 提供了更多的功能，请往下看。</p><p>简写属性和属性值<br>比如要定义元素的宽度，只需输入w100，即可生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 100<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>Emmet 的默认设置 w 是 width 的缩写，后面紧跟的数字就是属性值。默认的属性值单位是 px ，你可以在值的后面紧跟字符生成单位，可以是任意字符。例如，w100foo 会生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span><span class="selector-pseudo">:100foo</span>;</span><br></pre></td></tr></table></figure><p>同样也可以简写属性单位，如果你紧跟属性值后面的字符是 p，那么将会生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span><span class="selector-pseudo">:100</span>%;</span><br></pre></td></tr></table></figure><p>下面是单位别名列表：</p><ul><li>p 表示%</li><li>e 表示 em</li><li>x 表示 ex</li></ul><p>像 margin 这样的属性，可能并不是一个属性值，生成多个属性值需要用横杠（-）连接两个属性值，因为 Emmet 的指令中是不允许空格的。例如使用 m10-20 可以生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>如果你想生成负值，多加一条横杠即可。例如：m10–20 可以生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">-20px</span>;</span><br></pre></td></tr></table></figure><p>需要注意的是，如果你对每个属性都指定了单位，那么不需要使用横杠分割。例如使用 m10e20e 可以生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">em</span> 20<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure><p>如果使用了横杠分割，那么属性值就变成负值了。例如使用 m10e-20e 就生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">em</span> <span class="selector-tag">-20em</span>;</span><br></pre></td></tr></table></figure><p>如果你想一次生成多条语句，可以使用 “+” 连接两条语句，例如使用 h10p+m5e 可以生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">height</span>: 10%;</span><br><span class="line"><span class="selector-tag">margin</span>: 5<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure><p>颜色值也是可以快速生成的，例如 <code>c#3</code> 生成 <code>color: #333</code>;，更复杂一点的，使用 <code>bd5#0s</code>可以生成 <code>border: 5px #000 solid;</code>。</p><p>下面是颜色值生成规则：</p><p>-‘#1’ → #111111<br>-‘#e0’ → #e0e0e0<br>-‘#fc0’ → #ffcc00</p><p>生成 <code>!important</code> 这条语句也当然很简单，只需要一个 “!” 就可以了。</p><h2 id="附加属性"><a href="#附加属性" class="headerlink" title="附加属性"></a>附加属性</h2><p>使用 @f 即可生成 CSS3 中的 font-face 的代码结构：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>:;</span><br><span class="line"><span class="attribute">src</span>:<span class="built_in">url</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个结构太简单，不包含一些其他的 font-face 的属性，诸如 background-image、 border-radius、 font、@font-face、 text-outline、 text-shadow 等属性，我们可以在生成的时候输入 “+” 生成增强的结构，例如我们可以输入 @f+ 命令，即可输出选项增强版的 font-face 结构：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">'FontName'</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'FileName.eot'</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'FileName.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>),</span><br><span class="line"> <span class="built_in">url</span>(<span class="string">'FileName.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</span><br><span class="line"> <span class="built_in">url</span>(<span class="string">'FileName.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>),</span><br><span class="line"> <span class="built_in">url</span>(<span class="string">'FileName.svg#FontName'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h3><p>如果有些缩写你拿不准，Emmet 会根据你的输入内容匹配最接近的语法，比如输入 ov:h、ov-h、ovh 和 oh，生成的代码是相同的：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br></pre></td></tr></table></figure><h3 id="供应商前缀"><a href="#供应商前缀" class="headerlink" title="供应商前缀"></a>供应商前缀</h3><p>CSS3 等现在还没有出正式的 W3C 规范，但是很多浏览器已经实现了对应的功能，仅作为测试只用，所以在属性前面加上自己独特的供应商前缀，不同的浏览器只会识别带有自己规定前缀的样式。然而为了实现兼容性，我们不得不编写大量的冗余代码，而且要加上对应的前缀。使用 Emmet 可以快速生成带有前缀的 CSS3 属性。</p><p>在任意字符前面加上一条横杠（-），即可生成该属性的带前缀代码，例如输入 -foo-css，会生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-foo-css</span>: ;</span><br><span class="line"><span class="selector-tag">-moz-foo-css</span>: ;</span><br><span class="line"><span class="selector-tag">-ms-foo-css</span>: ;</span><br><span class="line"><span class="selector-tag">-o-foo-css</span>: ;</span><br><span class="line"><span class="selector-tag">foo-css</span>: ;</span><br></pre></td></tr></table></figure><p>虽然 foo-css 并不是什么属性，但是照样可以生成。此外，你还可以详细的控制具体生成哪几个浏览器前缀或者先后顺序，使用 -wm-trf 即可生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-transform</span>: ;</span><br><span class="line"><span class="selector-tag">-moz-transform</span>: ;</span><br><span class="line"><span class="selector-tag">transform</span>: ;</span><br></pre></td></tr></table></figure><p>可想而知，w 就是 webkit 前缀的缩写，m 是 moz 前缀缩写，s 是 ms 前缀缩写，o 就是 opera 浏览器前缀的缩写。如果使用 -osmw-abc 即可生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-o-abc</span>: ;</span><br><span class="line"><span class="selector-tag">-ms-abc</span>: ;</span><br><span class="line"><span class="selector-tag">-moz-abc</span>: ;</span><br><span class="line"><span class="selector-tag">-webkit-abc</span>: ;</span><br><span class="line"><span class="selector-tag">abc</span>: ;</span><br></pre></td></tr></table></figure><h3 id="渐变背景"><a href="#渐变背景" class="headerlink" title="渐变背景"></a>渐变背景</h3><p>CSS3 中新增加了一条属性 linear-gradient 使用这个属性可以直接制作出渐变的效果。但是这个属性的参数比较复杂，而且需要添加实验性前缀，无疑需要生成大量代码。而在 Emmet 中使用 lg() 指令即可快速生成，例如：使用 lg(left, #fff 50%, #000) 可以直接生成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">-webkit-gradient</span>(<span class="selector-tag">linear</span>, 0 0, 100% 0, <span class="selector-tag">color-stop</span>(0<span class="selector-class">.5</span>, <span class="selector-id">#fff</span>), <span class="selector-tag">to</span>(<span class="selector-id">#000</span>));</span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">left</span>, <span class="selector-id">#fff</span> 50%, <span class="selector-id">#000</span>);</span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">left</span>, <span class="selector-id">#fff</span> 50%, <span class="selector-id">#000</span>);</span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">left</span>, <span class="selector-id">#fff</span> 50%, <span class="selector-id">#000</span>);</span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">left</span>, <span class="selector-id">#fff</span> 50%, <span class="selector-id">#000</span>);</span><br></pre></td></tr></table></figure><h2 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h2><h3 id="生成Lorem-ipsum文本"><a href="#生成Lorem-ipsum文本" class="headerlink" title="生成Lorem ipsum文本"></a>生成Lorem ipsum文本</h3><p>Lorem ipsum 指一篇常用于排版设计领域的拉丁文文章，主要目的是测试文章或文字在不同字型、版型下看起来的效果。通过 Emmet，你只需输入 lorem 或 lipsum 即可生成这些文字。还可以指定文字的个数，比如 lorem10，将生成：</p><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo, esse, provident, nihil laudantium vitae quam natus a earum assumenda ex vel consectetur fugiat eveniet minima veritatis blanditiis molestiae harum est!</p></blockquote><h3 id="定制"><a href="#定制" class="headerlink" title="定制"></a>定制</h3><p>你还可以定制Emmet插件：</p><p>添加新缩写或更新现有缩写，可修改 <a href="http://docs.emmet.io/customization/snippets/" target="_blank" rel="noopener">snippets.json</a>文件<br>更改Emmet过滤器和操作的行为，可修改 <a href="http://docs.emmet.io/customization/preferences/" target="_blank" rel="noopener">preferences.json</a> 文件<br>定义如何生成HTML或XML代码，可修改 <a href="http://docs.emmet.io/customization/syntax-profiles/" target="_blank" rel="noopener">syntaxProfiles.json</a> 文件</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li><p>Ctrl+,<br>  展开缩写</p></li><li><p>Ctrl+M<br>  匹配对</p></li><li><p>Ctrl+H<br>  使用缩写包括</p></li><li><p>Shift+Ctrl+M<br>  合并行</p></li><li><p>Ctrl+Shift+?<br>  上一个编辑点</p></li><li><p>Ctrl+Shift+?<br>  下一个编辑点</p></li><li><p>Ctrl+Shift+?<br>  定位匹配对</p></li></ul><p>最后<br>Emmet 的官方 API 列表<a href="http://docs.emmet.io/cheat-sheet/" target="_blank" rel="noopener">在这里</a>，有一个pdf版本可以【<a href="https://docs.emmet.io/cheatsheet-a5.pdf" target="_blank" rel="noopener">点此下载</a>】</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载于：&lt;a href=&quot;http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在前端开发的过程中，一个最繁琐的工作就是写 HTML、CSS 代码。数量繁多的标签、属性、尖括号、标签闭合等，让前端们甚是苦恼。于是，我向大家推荐 Emmet，它提供了一套非常简单的语法规则，书写起来非常爽快，然后只需要敲一个快捷键就立刻生成对应的 HTML 或 CSS 代码，极大提高了代码书写效率。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian" scheme="http://www.ilovesusu.com/categories/Debian/"/>
    
      <category term="编程" scheme="http://www.ilovesusu.com/categories/Debian/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="前端" scheme="http://www.ilovesusu.com/categories/Debian/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="http://www.ilovesusu.com/tags/css/"/>
    
      <category term="web" scheme="http://www.ilovesusu.com/tags/web/"/>
    
      <category term="Emmet" scheme="http://www.ilovesusu.com/tags/Emmet/"/>
    
  </entry>
  
  <entry>
    <title>Debian 搭建RTMP/HLS流媒体服务器</title>
    <link href="http://www.ilovesusu.com/2018/06/07/Debian-%E6%90%AD%E5%BB%BARTMP-HLS%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.ilovesusu.com/2018/06/07/Debian-搭建RTMP-HLS流媒体服务器/</id>
    <published>2018-06-07T02:13:35.000Z</published>
    <updated>2019-03-28T02:29:35.064Z</updated>
    
    <content type="html"><![CDATA[<p>最近工作中需要一个直播功能，虽然有很多成熟的解决方案，但是由于好奇斗鱼这样的平台到底是怎么样的，故搜索了很多文章，终于有了了解。<br>最简单的都是通过nginx和一个nginx的模块nginx-rtmp-module，组合在一起搭建一个功能相对比较完善并可支持RTMP和HLS的流媒体服务器。<br>现在将最新的解决方案记录下来。<br><a id="more"></a></p><h2 id="旧方法"><a href="#旧方法" class="headerlink" title="旧方法"></a>旧方法</h2><p>之前大家都是通过添加模块nginx-rtmp-module编译打包来搭建的。<br>主要借鉴了</p><blockquote><p><a href="https://cxuef.github.io/linux/%E3%80%90%E7%BD%AE%E9%A1%B6%E3%80%91%E6%90%AD%E5%BB%BAnginx-rtmp%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8Cffmpeg%E6%A8%A1%E6%8B%9F%E6%8E%A8%E6%B5%81/" target="_blank" rel="noopener">【置顶】搭建nginx rtmp直播服务器，ffmpeg模拟推流</a><br><a href="https://www.lylinux.org/ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91nginx%E7%9A%84rtmp%E7%9B%B4%E6%92%AD%E6%A8%A1%E5%9D%97.html" target="_blank" rel="noopener">Ubuntu下编译Nginx的RTMP直播模块</a></p></blockquote><h2 id="新方法"><a href="#新方法" class="headerlink" title="新方法"></a>新方法</h2><p>既然标题是使用Debian来搭建，怎么少的了apt的，嘿嘿</p><p>如果使用apt 就很简单了，一句命令搞定，但是<del>缺点</del>就是可能不是最新的发布版</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx-full libnginx-mod-rtmp</span><br></pre></td></tr></table></figure><ol><li><p>修改/etc/nginx/nginx.conf</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4000;</span><br><span class="line">        #创建RTMP应用程序。与http位置不同，应用程序名称不能是一种模式。</span><br><span class="line">        application hls &#123;</span><br><span class="line">            live on;</span><br><span class="line">            #在应用程序上切换HLS</span><br><span class="line">            hls on;</span><br><span class="line">            hls_path /var/www/html/hls;</span><br><span class="line">            hls_fragment 5s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改虚拟主机配置文件(xxx是文件名称):</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-enabled/xxx</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location /hls &#123;</span><br><span class="line">    #是W3C标准里用来检查该跨域请求是否可以被通过</span><br><span class="line">    add_header Access-Control-Allow-Origin *;</span><br><span class="line">        types &#123;</span><br><span class="line">        application/vnd.apple.mpegurl m3u8;</span><br><span class="line">        video/mp2t ts;</span><br><span class="line">        &#125;</span><br><span class="line">    root /var/www/html/;</span><br><span class="line">    add_header Cache-Control no-cache;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建目录:</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/share/nginx/html/hls</span><br></pre></td></tr></table></figure></li><li><p>重启nginx:</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx.service</span><br></pre></td></tr></table></figure></li></ol><p>重启完成后，nginx算是成功了，下面就可以测试了，可以使用ffmpeg或obs来推流。</p><p>obs:<br>&gt;</p><p>ffmpeg:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i test.flv -f flv rtmp://192.168.242.172/myapp/test1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作中需要一个直播功能，虽然有很多成熟的解决方案，但是由于好奇斗鱼这样的平台到底是怎么样的，故搜索了很多文章，终于有了了解。&lt;br&gt;最简单的都是通过nginx和一个nginx的模块nginx-rtmp-module，组合在一起搭建一个功能相对比较完善并可支持RTMP和HLS的流媒体服务器。&lt;br&gt;现在将最新的解决方案记录下来。&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="RTMP/HLS" scheme="http://www.ilovesusu.com/tags/RTMP-HLS/"/>
    
      <category term="直播" scheme="http://www.ilovesusu.com/tags/%E7%9B%B4%E6%92%AD/"/>
    
      <category term="流媒体服务器" scheme="http://www.ilovesusu.com/tags/%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>debian9 安装 openvas9</title>
    <link href="http://www.ilovesusu.com/2018/02/02/debian9-%E5%AE%89%E8%A3%85-openvas9/"/>
    <id>http://www.ilovesusu.com/2018/02/02/debian9-安装-openvas9/</id>
    <published>2018-02-02T09:32:53.000Z</published>
    <updated>2018-12-23T09:49:36.417Z</updated>
    
    <content type="html"><![CDATA[<p>debian 中虽然有openvas的软件包，但是在安装完成以后，实际上不能完成openvas-setup安装。经过几天的搜索、琢磨，终于功夫不负有心人，现将openvas安装中需要修改的配置进行总结。<br><a id="more"></a></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在执行openvas-setup后，脚本将在NVT下载结束时显示错误，如下所示。</p><blockquote><p>(openvassd:2272): lib kb_redis-CRITICAL <strong>: get_redis_ctx: redis connection error: No such file or directory<br>(openvassd:2272): lib kb_redis-CRITICAL </strong>: redis_new: cannot access redis at ‘/tmp/redis.sock’<br>(openvassd:2272): lib kb_redis-CRITICAL **: get_redis_ctx: redis connection error: No such file or directory<br>openvassd: no process found</p></blockquote><h2 id="问题根源"><a href="#问题根源" class="headerlink" title="问题根源"></a>问题根源</h2><p>经过google搜索等查找渠道，我找到以下几个问题</p><ol><li>openvas 的 openvassd 进程调用的kb_location有误</li><li>openvas-scanner 在配置文件 /etc/default/openvas-scanner 中的SCANNER_SOCKET字段配置有误</li><li>openvas-scanner 的systemd服务文件中ExecStart=/usr/sbin/openvassd –unix-socket=字段配置有误</li></ol><p>第一个问题的原因是因为openvassd使用unix-socket与redis通信，然后默认调用/tmp/redis.sock，但是/tmp/redis.sock由于systemd的原因，需要关闭PrivateTmp才能行。至于PrivateTmp，看<a href="https://www.bbsmax.com/A/QV5ZxbRezy/" target="_blank" rel="noopener">这个</a></p><p>第二个问题的原因是debian9中openvas软件包的默认配置就有问题。默认配置文件 /etc/default/openvas-scanner 中的SCANNER_SOCKET=/tmp/redis.sock，这是错误的配置。</p><p>第三个问题的原因是/lib/systemd/system/openvas-scanner.service文件中ExecStart=/usr/sbin/openvassd –unix-socket=/tmp/redis.sock是一个错误的socket指向。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li><p>openvas 的 openvassd 进程调用的kb_location有误</p><p> 修改/etc/openvas/openvassd.conf文件内容如下：（文件不存在请自己创建）</p><blockquote><p>kb_location=/var/run/redis/redis.sock</p></blockquote></li><li><p>openvas-scanner 在配置文件 /etc/default/openvas-scanner 中的SCANNER_SOCKET字段配置有误</p><p> 需要修改内容如下</p><blockquote><p>SCANNER_SOCKET=/var/run/openvassd.sock</p></blockquote></li><li><p>openvas-scanner 的systemd服务文件中ExecStart=/usr/sbin/openvassd –unix-socket=字段配置有误</p><p> 需要修改内容如下</p><blockquote><p>ExecStart=/usr/sbin/openvassd –unix-socket=/var/run/openvassd.sock</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;debian 中虽然有openvas的软件包，但是在安装完成以后，实际上不能完成openvas-setup安装。经过几天的搜索、琢磨，终于功夫不负有心人，现将openvas安装中需要修改的配置进行总结。&lt;br&gt;
    
    </summary>
    
      <category term="Debian" scheme="http://www.ilovesusu.com/categories/Debian/"/>
    
    
      <category term="Openvas" scheme="http://www.ilovesusu.com/tags/Openvas/"/>
    
      <category term="扫描器" scheme="http://www.ilovesusu.com/tags/%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Nvidia optirun|primusrun 缺少 libGL.so.1 解决方案</title>
    <link href="http://www.ilovesusu.com/2017/11/03/Nvidia-optirun-primusrun-%E7%BC%BA%E5%B0%91-libGL-so-1-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.ilovesusu.com/2017/11/03/Nvidia-optirun-primusrun-缺少-libGL-so-1-解决方案/</id>
    <published>2017-11-03T14:22:06.000Z</published>
    <updated>2018-12-15T07:09:12.720Z</updated>
    
    <content type="html"><![CDATA[<p>当您运行optirun或primus时，您或许会遇到…libGL.so.1: cannot open shared object file: No such file or directory…<br><a id="more"></a><br>这个错误暂时状态是open<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=876033" target="_blank" rel="noopener">#876033</a></p><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>完整错误提示为：</p><blockquote><p>$ primus: fatal: failed to load any of the libraries: /usr/lib/x86_64-linux-gnu/nvidia/libGL.so.1:/usr/lib/i386-linux-gnu/nvidia/libGL.so.1:/usr/lib/nvidia/libGL.so.1<br>/usr/lib/x86_64-linux-gnu/nvidia/libGL.so.1: cannot open shared object file: No such file or directory<br>/usr/lib/i386-linux-gnu/nvidia/libGL.so.1: cannot open shared object file: No such file or directory<br>/usr/lib/nvidia/libGL.so.1: cannot open shared object file: No such file or directory</p><p>$ primus: fatal: failed to load any of the libraries: /usr/lib/x86_64-linux-gnu/ nvidia/libGL.so.1:/usr/lib/i386-linux-gnu/nvidia/libGL.so.1:/usr/lib/nvidia/libGL.so.1<br>/usr/lib/x86_64-linux-gnu/nvidia/libGL.so.1: wrong ELF class: ELFCLASS64<br>/usr/lib/i386-linux-gnu/nvidia/libGL.so.1: cannot open shared object file: No such file or directory<br>/usr/lib/nvidia/libGL.so.1: cannot open shared object file: No such file or directory</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>首先，确保你已经开启了i386的支持</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br></pre></td></tr></table></figure><p>其次，确保你已经安装了primus-libs-ia32包，如果没有安装请安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install primus-libs-ia32</span><br></pre></td></tr></table></figure><p>然后执行命令安装这些软件包：libgl1-nvidia-glx libgl1-nvidia-glx:i386 nvidia-driver-libs nvidia-driver-libs-i386</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libgl1-nvidia-glx libgl1-nvidia-glx:i386 nvidia-driver-libs nvidia-driver-libs-i386</span><br></pre></td></tr></table></figure><p>转载自：<a href="https://wiki.debian-fr.xyz/NVidia_Optimus_Bumblebee#libGL.so.1" target="_blank" rel="noopener">https://wiki.debian-fr.xyz/NVidia_Optimus_Bumblebee#libGL.so.1</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当您运行optirun或primus时，您或许会遇到…libGL.so.1: cannot open shared object file: No such file or directory…&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="Nvidiao" scheme="http://www.ilovesusu.com/tags/Nvidiao/"/>
    
      <category term="ptirun|primusrun" scheme="http://www.ilovesusu.com/tags/ptirun-primusrun/"/>
    
  </entry>
  
  <entry>
    <title>mysql|mariaDB 安装详细教程</title>
    <link href="http://www.ilovesusu.com/2017/10/30/mysql-mariaDB-%E5%AE%89%E8%A3%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>http://www.ilovesusu.com/2017/10/30/mysql-mariaDB-安装详细教程/</id>
    <published>2017-10-30T14:10:00.000Z</published>
    <updated>2019-03-15T11:08:22.382Z</updated>
    
    <content type="html"><![CDATA[<p>MariaDB 是深受欢迎的数据库管理服务器软件 MySQL 的一个自由开源的分支。它由 MySQL 的原开发者在 GPLv2（通用公共许可证 2 版）下开发，并保持开源。<br>既然这么清真，我们来学习一下如何在 Debian 及其子类发行版中安装 MariaDB 10.X 稳定版。<br><a id="more"></a><br><img src="https://mariadb.org/files/mariadb-corp.png" alt="aa"></p><h2 id="获取-MariaDB-仓库及其密钥"><a href="#获取-MariaDB-仓库及其密钥" class="headerlink" title="获取 MariaDB 仓库及其密钥"></a>获取 MariaDB 仓库及其密钥</h2><p>打开<a href="https://downloads.mariadb.org/mariadb/repositories/" target="_blank" rel="noopener">这个</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>更新系统安装包列表，并像下面这样安装 MariaDB 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install mariadb-server</span><br></pre></td></tr></table></figure><p>安装过程中，会提示您为您的 MariaDB 服务器设置一个安全的 root 用户密码，并且会重复确认。</p><h2 id="保护数据库"><a href="#保护数据库" class="headerlink" title="保护数据库"></a>保护数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p>运行 mysql_secure_installation 脚本来保护数据库，你可以设置：</p><ul><li>设置 root 密码（如果在上面的配置环节你没有进行设置的话）。</li><li>禁止远程 root 登录</li><li>移除测试数据库</li><li>移除匿名用户</li><li>重载权限配置</li></ul><h2 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h2><p>我们忘记了密码，或者数据库被入侵者修改了密码，该如何处理呢，下述了解决步骤。</p><ol><li><p>停止mysql或者mariadb服务(systenV|systemd)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysqld|mariadb stop</span><br><span class="line">systemctl stop mariadb.service</span><br></pre></td></tr></table></figure></li><li><p>跳过授权表启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --skip-grant-table &amp;</span><br></pre></td></tr></table></figure></li><li><p>修改mysql.user表的密码,不用密码登陆</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">'newpass'</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure></li><li><p>杀掉mysqld进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill mysqld</span><br></pre></td></tr></table></figure></li><li><p>重启服务(systenV|systemd)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysqld|mariadb start</span><br><span class="line">systemctl restart mariadb.service</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MariaDB 是深受欢迎的数据库管理服务器软件 MySQL 的一个自由开源的分支。它由 MySQL 的原开发者在 GPLv2（通用公共许可证 2 版）下开发，并保持开源。&lt;br&gt;既然这么清真，我们来学习一下如何在 Debian 及其子类发行版中安装 MariaDB 10.X 稳定版。&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>mysql|mariaDB 问题解决方案</title>
    <link href="http://www.ilovesusu.com/2017/10/30/mysql-mariaDB-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.ilovesusu.com/2017/10/30/mysql-mariaDB-问题解决方案/</id>
    <published>2017-10-30T13:53:44.000Z</published>
    <updated>2018-12-16T06:16:01.673Z</updated>
    
    <content type="html"><![CDATA[<p>Debian 安装mysql|mariaDB以后，通常都会出现各种始料未及的错误，本教程将介绍如何解决此问题。</p><a id="more"></a><h2 id="“Plugin-‘unix-socket’-is-not-loaded-或-ERROR-1698-28000-Access-denied-for-user-‘root’-’localhost’"><a href="#“Plugin-‘unix-socket’-is-not-loaded-或-ERROR-1698-28000-Access-denied-for-user-‘root’-’localhost’" class="headerlink" title="“Plugin ‘unix_socket’ is not loaded 或 ERROR 1698 (28000): Access denied for user ‘root’@’localhost’."></a>“Plugin ‘unix_socket’ is not loaded 或 ERROR 1698 (28000): Access denied for user ‘root’@’localhost’.</h2><h3 id="什么是Unix-Socket插件？"><a href="#什么是Unix-Socket插件？" class="headerlink" title="什么是Unix_Socket插件？"></a>什么是Unix_Socket插件？</h3><p>MariaDB 5.2.0中首先支持Unix_Socket身份验证插件，允许用户使用操作系统凭据通过Unix套接字连接到MariaDB。<br>默认情况下不安装此插件。</p><p>注意：某些情况也会出现上述问题。<br>在Debian 9中，某个情况下（也许在安装和删除mariadb之后）mysql无法运行。提示错误“Plugin ‘unix_socket’ is not loaded”。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>首先切换root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure><p>然后按照：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mariadb.service</span><br><span class="line">mysqld_safe --skip-grant-tables &amp;</span><br><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure><p>这将完全停止mysql，绕过用户身份验证（不需要密码）并使用用户“root”连接到mysql。<br>现在，在mysql控制台中，使用mysql管理db：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br></pre></td></tr></table></figure><p>要将root密码重置为mynewpassword（根据您的需要更改），只是为了确保：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">"mynewpassword"</span>) <span class="built_in">where</span> User=<span class="string">'root'</span>;</span><br></pre></td></tr></table></figure><p>而这一个将覆盖身份验证方法，删除unix_socket请求（和其他一切），恢复正常和工作的密码方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> plugin=<span class="string">"mysql_native_password"</span>;</span><br></pre></td></tr></table></figure><p>退出mysql控制台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit;</span><br></pre></td></tr></table></figure><p>停止并启动与mysql相关的所有内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop mariadb.service</span><br><span class="line"><span class="built_in">kill</span> -9 \$(pgrep mysql)</span><br><span class="line">systemctl restart mariadb.service</span><br></pre></td></tr></table></figure><h2 id="MySQL远程访问权限"><a href="#MySQL远程访问权限" class="headerlink" title="MySQL远程访问权限"></a>MySQL远程访问权限</h2><p>MariaDB默认是不允许用户远程登录的，如果需要远程登录，则需要以下操作。</p><h3 id="允许root用户远程登录MariaDB"><a href="#允许root用户远程登录MariaDB" class="headerlink" title="允许root用户远程登录MariaDB"></a>允许root用户远程登录MariaDB</h3><ol><li><p>修改配置文件的端口绑定</p><p> 打开的目录可能会根据MySQL的版本稍有不同，可以先尝试打开/etc/mysql/mariadb.conf.d/*这些配置文件，若该文件不存在或文件内容为空，则尝试下面的文件路径。</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf</span><br></pre></td></tr></table></figure><p> 在下面行的开头加上#，注释掉该行，然后保存退出：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span>-address = 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>修改访问权限</p><p> 进入mysql,输入如下命令，输入密码，进入mysql命令行</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p> 授权root用户访问权限，并刷新权限，此处的root可用其它MySQL用户替换，pwd部分需替换为该用户对应的密码</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to root@<span class="string">"%"</span> identified by <span class="string">"newPWD"</span> with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure></li><li><p>重启mysql服务</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Debian 安装mysql|mariaDB以后，通常都会出现各种始料未及的错误，本教程将介绍如何解决此问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>nvidia Bumblebee don&#39;t work</title>
    <link href="http://www.ilovesusu.com/2017/09/16/nvidia-Bumblebee-don-t-work/"/>
    <id>http://www.ilovesusu.com/2017/09/16/nvidia-Bumblebee-don-t-work/</id>
    <published>2017-09-16T03:25:30.000Z</published>
    <updated>2018-12-15T07:09:12.720Z</updated>
    
    <content type="html"><![CDATA[<p>在Debian安装了Bumblebee，但是使用的时候提示错误。</p><blockquote><p>[ERROR]The Bumblebee daemon has not been started yet or the socket path /var/run/bumblebee.socket was incorrect.<br>[ERROR]Could not connect to bumblebee daemon - is it running?<br><a id="more"></a></p></blockquote><h2 id="二级菜单"><a href="#二级菜单" class="headerlink" title="二级菜单"></a>二级菜单</h2><p>查了资料，现将解决方案复制如下：（翻译）</p><p>我升级了一些软件包后遇到这个问题。似乎问题是由Nvidia内核模块从“nvidia”更名为“nvidia_current”引起的。</p><p>如果您有这个问题，您可以通过编辑/etc/bumblebee/bumblebee.conf和添加修改以下值来解决问题：</p><blockquote><p>…<br>[bumblebeed]<br>Driver=nvidia<br>…<br>[driver-nvidia]<br>KernelDriver=nvidia_current<br>Module=nvidia<br>…</p></blockquote><p>然后重新开始大黄蜂服务：</p><blockquote><p>sudo systemctl restart bumblebeed.service</p></blockquote><p>并测试：</p><blockquote><p>optirun glxgears</p></blockquote><p>参考文献：</p><blockquote><p><a href="https://github.com/Bumblebee-Project/Bumblebee/issues/238" target="_blank" rel="noopener">https://github.com/Bumblebee-Project/Bumblebee/issues/238</a><br><a href="https://github.com/Bumblebee-Project/Bumblebee/issues/330" target="_blank" rel="noopener">https://github.com/Bumblebee-Project/Bumblebee/issues/330</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Debian安装了Bumblebee，但是使用的时候提示错误。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[ERROR]The Bumblebee daemon has not been started yet or the socket path /var/run/bumblebee.socket was incorrect.&lt;br&gt;[ERROR]Could not connect to bumblebee daemon - is it running?&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="Bumblebee" scheme="http://www.ilovesusu.com/tags/Bumblebee/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习总结</title>
    <link href="http://www.ilovesusu.com/2017/09/11/mysql%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://www.ilovesusu.com/2017/09/11/mysql学习总结/</id>
    <published>2017-09-11T02:03:36.000Z</published>
    <updated>2018-12-15T07:09:12.716Z</updated>
    
    <content type="html"><![CDATA[<p>Mysql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一.<br><a id="more"></a></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><h3 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h3><p>详细看<a href="www.baidu.com">这里</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install mysql-server mysql-client</span><br><span class="line">or</span><br><span class="line">apt install mariadb-server mariadb-client</span><br></pre></td></tr></table></figure><h3 id="服务端启动："><a href="#服务端启动：" class="headerlink" title="服务端启动："></a>服务端启动：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mariadb start</span><br></pre></td></tr></table></figure><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><h4 id="使用mysql-client连接"><a href="#使用mysql-client连接" class="headerlink" title="使用mysql-client连接"></a>使用mysql-client连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h host -u user</span><br></pre></td></tr></table></figure><h4 id="使用mycli连接"><a href="#使用mycli连接" class="headerlink" title="使用mycli连接"></a>使用mycli连接</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mycli -h host -u user</span><br></pre></td></tr></table></figure><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><h3 id="mysql默认数据库"><a href="#mysql默认数据库" class="headerlink" title="mysql默认数据库"></a>mysql默认数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql - 用户权限相关数据</span><br><span class="line">test - 用于用户测试数据</span><br><span class="line">information_schema - MySQL本身架构相关数据</span><br></pre></td></tr></table></figure><h3 id="展示所有数据库"><a href="#展示所有数据库" class="headerlink" title="展示所有数据库"></a>展示所有数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br></pre></td></tr></table></figure><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> DB_NAME;</span><br></pre></td></tr></table></figure><h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> DB_NAME;</span><br></pre></td></tr></table></figure><h3 id="显示当前使用数据库中所有表"><a href="#显示当前使用数据库中所有表" class="headerlink" title="显示当前使用数据库中所有表"></a>显示当前使用数据库中所有表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span>;</span><br></pre></td></tr></table></figure><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'IP地址'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>;</span><br><span class="line">          <span class="comment">-- 用户名@IP地址         用户只能在改IP下才能访问</span></span><br><span class="line">          <span class="comment">-- 用户名@192.168.1.%   用户只能在改IP段下才能访问(通配符%表示任意)</span></span><br><span class="line">          <span class="comment">-- 用户名@%             用户可以再任意IP下访问(默认IP地址为%)</span></span><br></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'IP地址'</span>;</span><br></pre></td></tr></table></figure><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">user</span> <span class="string">'用户名'</span>@<span class="string">'IP地址'</span>; to '新用户名'@'IP地址';;</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> <span class="string">'用户名'</span>@<span class="string">'IP地址'</span> = <span class="keyword">Password</span>(<span class="string">'新密码'</span>)</span><br></pre></td></tr></table></figure><h3 id="授权管理"><a href="#授权管理" class="headerlink" title="授权管理"></a>授权管理</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">'用户'</span>@<span class="string">'IP地址'</span>                  <span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">grant</span>  权限 <span class="keyword">on</span> 数据库.表 <span class="keyword">to</span>   <span class="string">'用户'</span>@<span class="string">'IP地址'</span>      <span class="comment">-- 授权</span></span><br><span class="line"><span class="keyword">revoke</span> 权限 <span class="keyword">on</span> 数据库.表 <span class="keyword">from</span> <span class="string">'用户'</span>@<span class="string">'IP地址'</span>      <span class="comment">-- 取消权限</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'abcxander'</span>@<span class="string">'localhost'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span>  *.* <span class="keyword">to</span> <span class="string">'abcxander'</span>@<span class="string">'localhost'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>; <span class="comment">-- 创建一个可以做任何事情的新用户（如：root）</span></span><br></pre></td></tr></table></figure><p>对于权限做一个总结 <a href="https://mariadb.com/kb/en/library/grant/" target="_blank" rel="noopener">官方文档</a></p><h4 id="全局权限"><a href="#全局权限" class="headerlink" title="全局权限"></a>全局权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>CREATE USER</td><td>使用CREATE USER语句创建用户</td></tr><tr><td>FILE</td><td>读取和写入服务器上的文件</td></tr><tr><td>GRANT OPTION</td><td>授予全局特权 您只能授予您所拥有的权限</td></tr><tr><td>PROCESS</td><td>通过 SHOW PROCESSLIST 或 mysqladmin进程列表 显示活动进程的信息</td></tr><tr><td>RELOAD</td><td>执行FLUSH语句或等效的mysqladmin命令</td></tr><tr><td>REPLICATION CLIENT</td><td>执行SHOW MASTER STATUS和SHOW SLAVE STATUS信息语句</td></tr><tr><td>REPLICATION SLAVE</td><td>主服务器在主服务器上使用的帐户需要此权限。 这是需要获得主机上的更新</td></tr><tr><td>SHOW DATABASES</td><td>使用SHOW DATABASES语句列出所有数据库</td></tr><tr><td>SHUTDOWN</td><td>使用SHUTDOWN或mysqladmin shutdown命令关闭服务器</td></tr><tr><td>SUPER</td><td>执行超级用户语句：CHANGE MASTER TO，KILL（没有此权限的用户只能杀死自己的线程）,PURGE LOGS，SET全局系统变量或mysqladmin调试命令</td></tr></tbody></table><h4 id="数据库权限"><a href="#数据库权限" class="headerlink" title="数据库权限"></a>数据库权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>CREATE</td><td>创建数据库时，需要授予数据库权限来使用CREATE DATABASE语句</td></tr><tr><td>CREATE ROUTINE</td><td>使用CREATE PROCEDURE和CREATE FUNCTION语句创建存储过程</td></tr><tr><td>CREATE TEMPORARY TABLES</td><td>使用CREATE TEMPORARY TABLE语句创建临时表，该权限可以写入和删除这些临时表</td></tr><tr><td>DROP</td><td>删除数据库</td></tr><tr><td>EVENT</td><td>创建，删除和更改事件（EVENT），在MySQL 5.1.6中添加的语句</td></tr><tr><td>GRANT OPTION</td><td>授予数据库权限，您只能授予您所拥有的权限</td></tr><tr><td>LOCK TABLES</td><td>使用LOCK TABLES语句获取显式锁; 您还需要让表具有SELECT权限，以便于锁定它。</td></tr></tbody></table><h4 id="表权限"><a href="#表权限" class="headerlink" title="表权限"></a>表权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>ALTER</td><td>使用ALTER TABLE语句更改现有表的结构</td></tr><tr><td>CREATE</td><td>使用CREATE TABLE语句创建一个表，您可以为尚不存在的表授予CREATE权限</td></tr><tr><td>CREATE VIEW</td><td>使用CREATE_VIEW语句创建视图。</td></tr><tr><td>DELETE</td><td>使用DELETE语句从表中删除行</td></tr><tr><td>DROP</td><td>使用DROP TABLE语句或使用DROP VIEW语句来删除表和视图</td></tr><tr><td>GRANT OPTION</td><td>授予表权限，您只能授予您所拥有的权限</td></tr><tr><td>INDEX</td><td>使用CREATE INDEX语句在表上创建一个索引</td></tr><tr><td>INSERT</td><td>使用INSERT语句将行添加到表中，也可以在各个列上设置INSERT权限</td></tr><tr><td>SELECT</td><td>使用SELECT语句从表中读取数据，SELECT特权也可以在各个列上设置</td></tr><tr><td>SHOW VIEW</td><td>查看视图权限</td></tr><tr><td>TRIGGER</td><td>执行关联到您更新表上的触发器，执行CREATE TRIGGER和DROP TRIGGER语句。 您仍然可以看到触发器</td></tr><tr><td>UPDATE</td><td>使用UPDATE语句更新表中的现有行</td></tr></tbody></table><h4 id="列权限"><a href="#列权限" class="headerlink" title="列权限"></a>列权限</h4><p>可以为表的各个列设置一些权限，要使用列权限，请明确指定表，并在特权类型之后提供表的字段。例如，以下语句将允许用户读取员工的姓名和职位，但不能读取同一表中的其他信息，例如薪水。<br><code>GRANT SELECT (name, position) on Employee to &#39;jeffrey&#39;@&#39;localhost&#39;;</code></p><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>INSERT (column_list)</td><td>使用INSERT语句添加一行指定内容，如果使用列级别INSERT权限，则必须在INSERT语句后指定使用的字段，所有其他列将被设置为其默认值，或NULL</td></tr><tr><td>SELECT (column_list)</td><td>使用SELECT语句读取列中的值，您无法访问或查询您没有SELECT权限的任何列，包括在WHERE，ON，GROUP BY和ORDER BY子句</td></tr><tr><td>UPDATE (column_list)</td><td>使用UPDATE语句更新现有行列的值，UPDATE语句通常包括一个仅更新某些行的WHERE子句，您必须在表的相应列具有SELECT权限或WHERE子句。</td></tr></tbody></table><h4 id="函数权限"><a href="#函数权限" class="headerlink" title="函数权限"></a>函数权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>ALTER ROUTINE</td><td>使用ALTER FUNCTION语句更改存储函数的特性</td></tr><tr><td>EXECUTE</td><td>使用存储功能。 你需要通过函数访问的任何表或列的SELECT权限</td></tr><tr><td>GRANT OPTION</td><td>授予函数权限。 您只能授予您所拥有的权限。</td></tr></tbody></table><h4 id="程序权限"><a href="#程序权限" class="headerlink" title="程序权限"></a>程序权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>ALTER ROUTINE</td><td>使用ALTER PROCEDURE语句更改存储过程的特性</td></tr><tr><td>EXECUTE</td><td>使用CALL语句执行存储过程，您执行的存储过程可能允许您没有权限的操作，例如将行插入到表中</td></tr><tr><td>GRANT OPTION</td><td>授予权限。 您只能授予您所拥有的权限</td></tr></tbody></table><h4 id="代理权限"><a href="#代理权限" class="headerlink" title="代理权限"></a>代理权限</h4><table><thead><tr><th>Privilege</th><th>Description</th></tr></thead><tbody><tr><td>PROXY</td><td>允许一个用户作为另一个用户的代理</td></tr></tbody></table><p>示例:</p><p><code>GRANT PROXY ON &#39;marijana&#39;@&#39;somehost&#39; TO &#39;barrfhionn&#39;@&#39;somehost&#39;;</code></p><h4 id="设置每个帐户的资源限制"><a href="#设置每个帐户的资源限制" class="headerlink" title="设置每个帐户的资源限制"></a>设置每个帐户的资源限制</h4><table><thead><tr><th>Limit Type</th><th>Decription</th></tr></thead><tbody><tr><td>MAX_QUERIES_PER_HOUR</td><td>帐户每小时可发出的报表数量（包括更新）</td></tr><tr><td>MAX_UPDATES_PER_HOUR</td><td>帐户可以每小时发出的更新数量（不是查询）</td></tr><tr><td>MAX_CONNECTIONS_PER_HOUR</td><td>帐户可以每小时启动的连接数</td></tr><tr><td>MAX_USER_CONNECTIONS</td><td>可以从同一帐户接受的同时连接数; 如果为0，将使用max_connections; 如果max_connections为0，则该帐户的并发连接没有限制</td></tr><tr><td>MAX_STATEMENT_TIME</td><td>用户执行的语句超时（秒）。 另请参见超过一定时间执行的中止声明</td></tr></tbody></table><h4 id="帐户SSL-TLS选项"><a href="#帐户SSL-TLS选项" class="headerlink" title="帐户SSL / TLS选项"></a>帐户SSL / TLS选项</h4><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>REQUIRE NONE</td><td>此帐户不需要TLS，但仍可使用</td></tr><tr><td>REQUIRE SSL</td><td>该帐户必须使用TLS，但不需要有效的X509证书</td></tr><tr><td>REQUIRE X509</td><td>该帐户必须使用TLS，并且必须具有有效的X509证书</td></tr><tr><td>REQUIRE ISSUER ‘issuer’</td><td>该帐户必须使用TLS，并且必须具有有效的X509证书。 此外，证书颁发机构必须是通过’issuer’颁发者指定</td></tr><tr><td>REQUIRE SUBJECT ‘subject’</td><td>该帐户必须使用TLS，并且必须具有有效的X509证书。 此外，证书必须是通过’subject’指定</td></tr><tr><td>REQUIRE CIPHER ‘cipher’</td><td>该帐户必须使用TLS，并且必须具有有效的X509证书。 此外，用于连接的加密必须使用’cipher’密码中指定的方法之一</td></tr></tbody></table><p>示例:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">USAGE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'someone'</span>@<span class="string">'localhost'</span></span><br><span class="line">    REQUIRE SUBJECT <span class="string">'/CN=www.mydom.com/O=My Dom, Inc./C=US/ST=Oregon/L=Portland'</span></span><br><span class="line">    <span class="keyword">AND</span> ISSUER <span class="string">'/C=FI/ST=Somewhere/L=City/ O=Some Company/CN=Peter Parker/emailAddress=p.parker@marvel.com'</span></span><br><span class="line">    <span class="keyword">AND</span> CIPHER <span class="string">'SHA-DES-CBC3-EDH-RSA'</span>;</span><br></pre></td></tr></table></figure><h2 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    字段名  类型  是否可以为空 defalut <span class="number">2</span> auto_increment primary <span class="keyword">key</span>，</span><br><span class="line">    字段名  类型  是否可以为空,</span><br><span class="line">    primary <span class="keyword">key</span>(字段名,字段名),</span><br><span class="line">    <span class="keyword">constraint</span> 外键名称（例如:FK_从表_主表） foreign <span class="keyword">key</span> 从表(外键字段) <span class="keyword">references</span> 主表(主键字段)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名</span><br></pre></td></tr></table></figure><h3 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;     (可通过where来删除部分内容)</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;  (清空表)</span><br></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><table><thead><tr><th>操作</th><th>sql语句</th></tr></thead><tbody><tr><td>修改数据库字符集和对照表</td><td><code>ALTER DATABASE DB_NAME CHARACTER SET = \&#39;utf8\&#39; COLLATE = \&#39;utf8_bin\&#39;;</code></td></tr><tr><td>添加列</td><td><code>ALTER TABLE 表名 add 字段名 类型;</code></td></tr><tr><td>删除列</td><td><code>ALTER TABLE 表名 drop column 字段名;</code></td></tr><tr><td>修改列类型</td><td><code>ALTER TABLE 表名 modify column 字段名 类型;</code></td></tr><tr><td>修改列字段名，类型</td><td><code>ALTER TABLE 表名 change 原字段名 新字段名 类型;</code></td></tr><tr><td>添加主键</td><td><code>ALTER TABLE 表名 add primary key(字段名);</code></td></tr><tr><td>删除主键</td><td><code>ALTER TABLE 表名 drop primary key;</code></td></tr><tr><td>删除自增并删除主键</td><td><code>ALTER TABLE 表名  modify 字段名 字段名 int, drop primary key;</code></td></tr><tr><td>添加外键</td><td><code>ALTER TABLE 从表 add constraint 外键名称\（例如:FK_从表_主表\） foreign key 从表\(外键字段\) references 主表\(主键字段\);</code></td></tr><tr><td>删除外键</td><td><code>ALTER TABLE 表名 drop foreign key 外键名称;</code></td></tr><tr><td>修改默认值</td><td><code>ALTER TABLE 表名 ALTER column 字段名 SET DEFAULT 1000;</code></td></tr><tr><td>删除默认值</td><td><code>ALTER TABLE 表名 ALTER column 字段名 DROP DEFAULT;</code></td></tr></tbody></table><h2 id="表内容操作"><a href="#表内容操作" class="headerlink" title="表内容操作"></a>表内容操作</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 (字段名,字段名...) <span class="keyword">values</span> (值,值,值...);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 (字段名,字段名...) <span class="keyword">values</span> (值,值,值...),(值,值,值...);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 (字段名,字段名...) <span class="keyword">select</span> (字段名,字段名...) <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">id</span>＝<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">name</span>＝<span class="string">'abcx'</span>;</span><br></pre></td></tr></table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> <span class="keyword">name</span> ＝ <span class="string">'abcx'</span> <span class="keyword">where</span> <span class="keyword">id</span>&gt;<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><h4 id="普通查询"><a href="#普通查询" class="headerlink" title="普通查询"></a>普通查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">1</span></span><br><span class="line"><span class="keyword">select</span> nid,<span class="keyword">name</span>,gender <span class="keyword">as</span> gg <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">name</span> != <span class="string">'abcx'</span> <span class="keyword">and</span> <span class="keyword">num</span> = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">between</span> <span class="number">5</span> <span class="keyword">and</span> <span class="number">16</span>; <span class="comment">--BETWEEN 操作符选取介于两个值之间的数据范围内的值</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> 表); <span class="comment">--可以将查询出的内容当作条件</span></span><br></pre></td></tr></table></figure><h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'abc%'</span>  <span class="comment">-- abc开头的所有（多个字符串）</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'abc_'</span>  <span class="comment">-- abc开头的所有（一个字符）</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'abc[a-f]'</span>  <span class="comment">-- [ ] 指定范围 ([a-f]) 或集合 ([abcdef]) 中的任何单个字符</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'abc[^a-f]'</span>  <span class="comment">-- [^] 不属于指定范围 ([a-f]) 或集合 ([abcdef]) 的任何单个字符</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%[!0-9]%'</span>  <span class="comment">-- [!] 排除  匹配内容不包含数字</span></span><br></pre></td></tr></table></figure><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">5</span>; <span class="comment">-- 前5行</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">5</span>;  <span class="comment">-- 从第4行开始的5行</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">5</span> <span class="keyword">offset</span> <span class="number">4</span>; <span class="comment">-- 从第4行开始的5行</span></span><br></pre></td></tr></table></figure><h4 id="查询排序"><a href="#查询排序" class="headerlink" title="查询排序"></a>查询排序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">order</span> <span class="keyword">by</span> 列 <span class="keyword">asc</span>;              <span class="comment">-- 根据 “列” 从小到大排列</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">order</span> <span class="keyword">by</span> 列 <span class="keyword">desc</span>;             <span class="comment">-- 根据 “列” 从大到小排列</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">order</span> <span class="keyword">by</span> 列<span class="number">1</span> <span class="keyword">desc</span>,列<span class="number">2</span> <span class="keyword">asc</span>;    <span class="comment">-- 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序</span></span><br></pre></td></tr></table></figure><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">num</span>,nid <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span>,nid;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">num</span>,nid <span class="keyword">from</span> 表  <span class="keyword">where</span> nid &gt; <span class="number">10</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span>,nid <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">num</span>,nid,<span class="keyword">count</span>(*),<span class="keyword">sum</span>(score),<span class="keyword">max</span>(score),<span class="keyword">min</span>(score) <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span> nid;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> 表 <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span> <span class="keyword">having</span> <span class="keyword">max</span>(<span class="keyword">id</span>) &gt; <span class="number">10</span>;</span><br><span class="line">    <span class="comment">--特别的：group by 必须在where之后，order by之前</span></span><br></pre></td></tr></table></figure><h4 id="连表查询"><a href="#连表查询" class="headerlink" title="连表查询"></a>连表查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">无对应关系则不显示</span><br><span class="line"><span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line"><span class="keyword">from</span> A,B</span><br><span class="line"><span class="keyword">Where</span> A.nid = B.nid</span><br><span class="line"></span><br><span class="line">自连接，无对应关系则不显示</span><br><span class="line"><span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line"><span class="keyword">from</span> A <span class="keyword">inner</span> <span class="keyword">join</span> B</span><br><span class="line"><span class="keyword">on</span> A.nid = B.nid</span><br><span class="line"></span><br><span class="line">左连接，A表所有显示，如果B中无对应关系，则值为<span class="literal">null</span></span><br><span class="line"><span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line"><span class="keyword">from</span> A <span class="keyword">left</span> <span class="keyword">join</span> B</span><br><span class="line"><span class="keyword">on</span> A.nid = B.nid</span><br><span class="line"></span><br><span class="line">右连接，B表所有显示，如果B中无对应关系，则值为<span class="literal">null</span></span><br><span class="line"><span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line"><span class="keyword">from</span> A <span class="keyword">right</span> <span class="keyword">join</span> B</span><br><span class="line"><span class="keyword">on</span> A.nid = B.nid</span><br></pre></td></tr></table></figure><h4 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">组合，自动处理重合</span><br><span class="line"><span class="keyword">select</span> nickname</span><br><span class="line"><span class="keyword">from</span> A</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> B</span><br><span class="line">组合，不处理重合</span><br><span class="line"><span class="keyword">select</span> nickname</span><br><span class="line"><span class="keyword">from</span> A</span><br><span class="line"><span class="keyword">union</span> all</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">from</span> B</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mysql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一.&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="mysql" scheme="http://www.ilovesusu.com/tags/mysql/"/>
    
      <category term="mariadb" scheme="http://www.ilovesusu.com/tags/mariadb/"/>
    
  </entry>
  
  <entry>
    <title>Debian下 Genymotion黑屏解决方案总汇</title>
    <link href="http://www.ilovesusu.com/2017/08/13/Debian%E4%B8%8B-Genymotion%E9%BB%91%E5%B1%8F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%80%BB%E6%B1%87/"/>
    <id>http://www.ilovesusu.com/2017/08/13/Debian下-Genymotion黑屏解决方案总汇/</id>
    <published>2017-08-13T09:29:00.000Z</published>
    <updated>2018-12-15T07:09:12.724Z</updated>
    
    <content type="html"><![CDATA[<p>在日常使用 genymotion 的过程在，由于各种奇葩的<del>操作</del>,导致genymotion在使用的时候回黑屏<br><a id="more"></a><br>黑屏真的是很烦，毕竟工作可能就耽误了，所以这里总结一下黑屏原因及解决方案</p><h2 id="Vbox-hostonly-network-broken导致黑屏"><a href="#Vbox-hostonly-network-broken导致黑屏" class="headerlink" title="Vbox hostonly network broken导致黑屏"></a>Vbox hostonly network broken导致黑屏</h2><p>打开Android虚拟机是这样的<br><img src="./geny1.png" alt=""><br>直接从Vbox中打开是这样的<br><img src="./geny2.png" alt=""><br>如上述图所示，这其实是Vbox自身的bug导致的，<a href="https://www.virtualbox.org/ticket/16911" target="_blank" rel="noopener">这里了解bug</a>发生在5.1.24版本，在5.1.26版本中修复了。<br>如果您还在使用vbox5.1.24那么解决方案是<a href="https://stackoverflow.com/questions/45226441/genymotion-black-screen-virtualbox-5-1-24/45226442#45226442" target="_blank" rel="noopener">这里简单修复</a></p><h2 id="Vbox网络适配器配置错误"><a href="#Vbox网络适配器配置错误" class="headerlink" title="Vbox网络适配器配置错误"></a>Vbox网络适配器配置错误</h2><p>如果是这种情况，您应该尝试以下操作</p><ol><li>运行VirtualBox。</li><li>打开文件&gt;首选项&gt;网络（或VirtualBox&gt; Mac OS X的首选项）。</li><li>单击主编辑网络。</li><li>检查适配器IPv4地址是否在与DHCP服务器地址相同的网络中（缺省为192.168.56.0/24）如果没有，您的虚拟设备无法启动</li></ol><p>可以参阅<a href="https://www.ptt.cc/bbs/ToS/M.1383049249.A.86E.html" target="_blank" rel="noopener">Vbox网络适配器配置</a><br>您也可以通过单击来删除主机专用网络。Genymotion将在下一个虚拟设备启动时自动重新创建它。</p><h2 id="防火墙或其他程序阻止Genogotion"><a href="#防火墙或其他程序阻止Genogotion" class="headerlink" title="防火墙或其他程序阻止Genogotion"></a>防火墙或其他程序阻止Genogotion</h2><p>如果可能的话，可以尝试断开任何可能阻碍这种情况的vpn服务或其他软件，并确保genogotion能够通过本地网络连接到虚拟设备。</p><p>如果您有防火墙，请确保您允许连接到Genymotion网络，默认设置为192.168.56.0/24。</p><h2 id="Genymotion卡在-eula-acceptance导致黑屏"><a href="#Genymotion卡在-eula-acceptance导致黑屏" class="headerlink" title="Genymotion卡在 eula acceptance导致黑屏"></a>Genymotion卡在 eula acceptance导致黑屏</h2><p><img src="./geny3.jpg" alt=""><br>选定这个窗口（获取焦点）</p><ol><li>点击 TAB 两次</li><li>点击 SPACE</li><li>点击 TAB 两次</li><li>点击SPACE</li></ol><p>这会点击确认复选框,默认接受EULA</p><p>风险:你没有读EULA就接受了协议</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>遇到genymotion发生故障时，首先不能着急，要冷静的查阅排误，切记要冷静的回想自己进行了什么<del>骚</del>操作.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在日常使用 genymotion 的过程在，由于各种奇葩的&lt;del&gt;操作&lt;/del&gt;,导致genymotion在使用的时候回黑屏&lt;br&gt;
    
    </summary>
    
      <category term="Debian GNU/Linux" scheme="http://www.ilovesusu.com/categories/Debian-GNU-Linux/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Debian 8 安装Shadowsocks-libev</title>
    <link href="http://www.ilovesusu.com/2016/11/28/Debian-8-%E5%AE%89%E8%A3%85Shadowsocks-libev/"/>
    <id>http://www.ilovesusu.com/2016/11/28/Debian-8-安装Shadowsocks-libev/</id>
    <published>2016-11-28T14:24:06.000Z</published>
    <updated>2018-12-15T07:09:12.720Z</updated>
    
    <content type="html"><![CDATA[<p>现在我将向您展示如何在Debian 8安装shadowsocks-libev。由于它是用C编写的，所以它消耗非常少的内存，非常适合嵌入式设备和低端盒。<br><a id="more"></a><br>因为Debian8 默认是没有shadowsocks-libev包的。<br>查看所有架构下的<a href="https://packages.debian.org/search?suite=all&amp;arch=any&amp;searchon=names&amp;keywords=shadowsocks-libev" target="_blank" rel="noopener">shadowsocks-libev</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>听老大说shadowsocks.org 提供的 deb 源严重过时了，最好不要用。建议修改。</strong>。</p><p><del>首先，获取GPG公钥，然后用apt-键导入到系统中。</del></p><blockquote><p>wget <a href="http://shadowsocks.org/debian/1D27208A.gpg" target="_blank" rel="noopener">http://shadowsocks.org/debian/1D27208A.gpg</a><br>sudo apt-key add 1D27208A.gpg</p></blockquote><p><del>现在打开/etc/apt/sources.list文件。</del></p><blockquote><p>sudo vi /etc/apt/sources.list</p></blockquote><p><del>将下列行放置在文件的结尾。</del></p><blockquote><p>#Debian 8<br>deb <a href="http://shadowsocks.org/debian" target="_blank" rel="noopener">http://shadowsocks.org/debian</a> wheezy main</p></blockquote><p><del>保存并关闭文件。现在更新本地包索引并安装shadowsocks-libev。</del></p><blockquote><p>sudo apt-get update;sudo apt-get install shadowsocks-libev~~</p></blockquote><p style="color:red;font-size:36px">看这里</p><p>所以，现在更新新的办法，就是使用Debian Backports。<br>切换为root并且使用你最顺手的编辑器打开文件 /etc/apt/sources.list :</p><blockquote><p>susu@debian:~$ su<br>Password:<br>debian:/home/human# nano /etc/apt/sources.list</p></blockquote><p>增加以下几行:</p><blockquote><p># Backports repository<br>deb <a href="http://backports.debian.org/debian-backports" target="_blank" rel="noopener">http://backports.debian.org/debian-backports</a> squeeze-backports main contrib non-free</p></blockquote><p>如果你是开源软件的狂热爱好者,你可能会想要移除 contrib 和 non-free 两个部分</p><p>既然你已经增加了软件库, 更新APT的缓存来包含在backports目录列表中的可用软件:</p><blockquote><p>debian:/home/susu# apt-get update</p></blockquote><p>然后就直接安装：</p><blockquote><p>apt-get install shadowsocks-libev</p></blockquote><h2 id="配置shadowsocks-libev"><a href="#配置shadowsocks-libev" class="headerlink" title="配置shadowsocks-libev"></a>配置shadowsocks-libev</h2><p>配置文件为：/etc/shadowsocks-libev/config.json，格式说明：</p><blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"server"</span>:<span class="string">"example.com or X.X.X.X"</span>,</span><br><span class="line"><span class="attr">"server_port"</span>:<span class="number">443</span>,</span><br><span class="line"><span class="attr">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line"><span class="attr">"method"</span>:<span class="string">"rc4-md5"</span>,</span><br><span class="line"><span class="attr">"timeout"</span>:<span class="number">60</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>其中：</p><blockquote><p>server：主机IP<br>server_port：服务器监听端口<br>password：密码<br>method：加密方式 默认为table,其他有rc4,rc4-md5,aes-128-cfb, aes-192-cfb, aes-256-cfb,bf-cfb, camellia-128-cfb, camellia-192-cfb,camellia-256-cfb, cast5-cfb, des-cfb</p></blockquote><p>多用户：</p><blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"server"</span>:<span class="string">"my_server_ip"</span>，</span><br><span class="line"> <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line"> <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">  <span class="attr">"port_password"</span>: &#123;</span><br><span class="line">     <span class="attr">"8381"</span>: <span class="string">"foobar1"</span>,</span><br><span class="line">     <span class="attr">"8382"</span>: <span class="string">"foobar2"</span>,</span><br><span class="line">     <span class="attr">"8383"</span>: <span class="string">"foobar3"</span>,</span><br><span class="line">     <span class="attr">"8384"</span>: <span class="string">"foobar4"</span></span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line"> <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line"> <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>配置完成以后需要重启服务：</p><blockquote><p>sudo service shadowsocks-libev restart</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在我将向您展示如何在Debian 8安装shadowsocks-libev。由于它是用C编写的，所以它消耗非常少的内存，非常适合嵌入式设备和低端盒。&lt;br&gt;
    
    </summary>
    
      <category term="科学上网" scheme="http://www.ilovesusu.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="Debian" scheme="http://www.ilovesusu.com/tags/Debian/"/>
    
      <category term="Testing/Stable" scheme="http://www.ilovesusu.com/tags/Testing-Stable/"/>
    
      <category term="Ubuntu" scheme="http://www.ilovesusu.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ilovesusu.com/tags/Linux/"/>
    
      <category term="科学上网" scheme="http://www.ilovesusu.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="shadowsocks-libev" scheme="http://www.ilovesusu.com/tags/shadowsocks-libev/"/>
    
      <category term="shadowsocks" scheme="http://www.ilovesusu.com/tags/shadowsocks/"/>
    
  </entry>
  
</feed>
